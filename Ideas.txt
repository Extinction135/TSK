






Magical Playthrough++

this means we can create a different type of playthrough,
where the player is a magic caster, vs not using the wand.
-
this is what sandbox option can become.



Magic Gatekeeping
we could gate magic spells behind a power level. player
would then have to be of that power level to cast those spells.
OR we just reward the player these spells for defeating enemies
in coliseums around the world, since each coliseum has a theme
that could be used as an elemental type. lava, for example, could
reward fire spells. that coliseum in the water? caused by a 
comet that EXPLODED the island, and rewards explosive spells...







Push++

should be able to push multiple objs at once, that are
draggable/pushable. this is an obj v obj interaction, hero
sets the obj.moving true - so this obj is sent to obj v obj
interactions, where the colliding obj can accept the hitting
obj's compmove direction and magnitude (or simply push).
this allow for many objs to be pushed into one another,
then pushed together, creating very interesting stackable
puzzles where many objs must be pushed at once.










AI++
we could likely limit ai on many objects to their interactive frames,
or to a single interaction check upon creation, like we do with floor
decorations (debris, blood, skeletons, stains).


Exploit : Trap Door Pit Teleport

the fix is simply to remove trap doors from the
routine that sets the last 'touched' door / active door.
in fact, only open doors should be set as the last / active door.
the other exploit is to touch a trap door or closed door to
set your respawn point, which is not what i want.






implement bed + dream sequences - special leveldata + set hero's type + dialog prompt
(exiting dream field ends the dream)
(we may split bed into two objects again, to make this interaction more expected)


Room keys - these only work for the room and only unlock 1 door, and
these rooms turn all their doors into locked doors upon close, similar to puzzled rooms
link doesn't put them into inventory - he literally picks them up and walks over
to a locked door and collides with it. link should also be able to throw keys into
locked doors, which means we need to throw objects directly in line from link,
which simplifies how objs are thrown ALOT, and makes their throws more predictable.

this is kinda like super mario world style key gameplay.
if obj.type == key & obj.hitBox.intersects lockedDoor.hitBox,
convert lockedDoor to openDoor, release() key.
- or - we put the key as a menuItem in inventory,
and clear that inventory item when link enters a new room (pre-build).

Keys!!!
**we could have 'keys' in the game, which would be temporary for the room only
the doors would shut and convert to locked versions, or only some of them would.
inside the room is a chest that contains a key. hero picks up the key, unlocks 
a door, key is used, continues on. the room resets, works the same later on.
the key would be displayed in the inventory screen as a brittle rusty key.
and when it's used, the key breaks. the flavor text says that the key will
likely break after one use.

we could lock one door randomly, or we could lock ALL THE DOORS, and then 
force the player to choose which door they want to unlock.





Boomers, man

fire boomerang++
ice boomerang++
normal boomerang++
explosive boomrang++
upon touch, simply create pros...







Ai counter

we need a pool.aiCount, to track how much work AI() is doing.
this is just like an interaction counter, displayed on screen
in debug info below interactions.

we should be using a string builder for debug display, for all
the display info.










Dog Vendor Context++

Little Girl (pet vendor)
father's dialog:
'i know she misses her mom, but saving all these puppies'
'isn't going to brink her back.. interested in a dog, mister?'
-we just need to add an older father figure near the pet vendor
to complete this mini-story. we can even make the father a
vendor for a side-quest to find and save the mother. upon
completion, the father could reward player something, switch
to a different type of vendor, and the mom could have sidequests
about revenge on those that kidnapped her. this questline could
lead to the discovery of an entire kidnapping ring, with a hidden
dungeon, with it's own small layout + tons of custom enemies, 
minis, bosses, and stuff. all that from a dog vendor idea.
also, we need more dogs, of different colors.

Dogs++

doggo should spawn with hero whenever he changes rooms in a dungeon.
this makes the dog more consistently around, considering that he can
and often does fall into pits. upon a fall into a pit, we could just
magically teleport the dog to hero's location. that would work too.
-dog should be gameobj in functions_hero class?
-this is handled specially outside of roomObj systems
-doggo is not really roomObj, not really projectile, more like actor
-make doggo an actor instance in fun_hero class that we handle specially
-this means doggo isn't part of actorPool and is never recycled
-we entirely handle doggo in fun_hero class or fun_pet class
-fun_pet class makes more sense, and maybe we have a petPool that we use?
-petPool could model multiple pets! which can easily be implemented
-we would just need to have different pets and diff pet vendors
-then player could build a 'pack' of pets to travel with
-how many pets? lets go with 8 pets.
-also, pressing interact while idle should 'whistle'
-this should call all your pets to your location (enlarge all pets search radius)
*we acn just do a palette swap on doggos for many flavors to test systems


Pets++

doggos should stop, face, and bark at bombable doors in dungeon rooms.
this makes them useful when exploring dungeons.
link and doggos should not collide, so link can always walk thru them.
doggos collide with all other actors, and roomObjs tho. never pros.
so they act as a moving shield against enemies getting close, if player
has 3 or more pets, but they still won't block projectiles or affect
player movement.






Fast MODE
for lower cpu systems, a setting that:
-turns off gore (reducing obj creation)





Dream Sequences

'i dreamed i was a tentacle, lost at sea...'
hero type = tentacle, empty sea level, with decorations.
dying or exiting level ends the dream. super easy.

'i dreamed i was part of a spider hockey league...'
spider, level is ice tiles, with bumpers, and 'puck'.
this obj inherits hit direction, but doesn't take
damage at all, so it never gets destroyed. spiders
have bite items which will hit the puck.

starting one of these dreams is an interaction with
a bed, popping a dialog asking if they want to sleep
in this bed. A button starts the dream sequence by exiting
the level to a dream setup screen, where text displays
slowly on screen, centered, against complete black.

once the text finishes, we wait for any button input.
then we fade in the level like normal.













ITEMS TODO:




cane of byrna: creates 4 balls of light around caster, 
which track with an offset, and kill anything they touch, but use magic

cane of somaria: creates a block of light, which can be pushed, 
hold down switches, interact with belts, etc..

magic cape: turns hero invisible & flying while in use, 
	with shadow only, uses magic constantly









The Axe

I'm straight ripping Kratos' axe here. This is an obj
much like the boomerang - thrown by Link. once it reaches
max distance, it falls to the ground. this isn't far.
pressing Y aggain then returns the axe to link's hand,
at maximum magnitude, through anykind of object or enemy.

- notes - 
if this projectile is moving, then it has interaction checks
with actors and roomObjects. if it is not moving, then the
axe is laying on the ground and is ignored.

*axe in hand, axe in air, and axe on ground sprites all added.

the axe must become MAGICAL before it will return to link.
so we have two axes: axe and magical axe. two different behaviors,
but one item, essentially. the axe just dupes sword behavior,
but when upgraded to magical status it becomes kratos' axe.
*axe should collide and collect pickups for link upon returning,
and throwing (while moving, basically). so, lining up the perfect
group of mobs and pulling an axe thru them also rewards the 
player with some of loot instantly. no elemental aspect to this
weapon please - no fire or ice or poison affects. this is a 
simple throw, wait, call item with specific destructive power
that keeps it in check.

+ added updated entities sheet to the game.

Design Parameters for Projectile Interaction with Actors

* the axe should stick into enemies.
* arrows should stick into enemies.
* at the same time, the hookshot should
pull whatever actor it is attached to (meaning
some enemies could pull themselves across gaps,
just like link does).

we have to design how projectiles stick to actors.
initial design is to put a projectile reference into
actor class. once stuck to the actor, the projectile
would live for 255 frames (life counter reset to 0, behavior
suppressed, only decoration), and then be released(), or in
the case of the axe, it would stick around until the caster
returned it, resetting it's lifecounter to 0 every 100
frames - living forever - unless the projectile pool is reset.
which is a safe way to add this idea into the current systems.

we should be modeling boomerang in actor class, along with
the magical axe. this allows enemies to use these items
using the same systems as the hero.

How Does this Affect Hookshot Design?

Hookshot Design: for each actor, there are projectile references.
if something is 'stuck' into the actor - like an arrow or axe.
hookshot can stick into an actor too, pulling that actor towards
the caster while dealing them 1 damage. but also, if hookshot
hits a blocking object, then hookshot drags the caster towards
it's location for 4 seconds, after a pretty swift speed. after
255 frames, the magnetic pull no longer happens. 

then we need only to decorate the line between caster and
hookshot tip. we need two sprites: hookshot tip and chain,
which is animated in lttp, so we'll do that too. we'll use
more sprites however, to make the chain seem more connected.
and i think we should use actual links of chain, not the spike
stuff, and the chains should connect visually, so they need to
be center connected. the tip connects centered too. if done this way,
we dont need an animation. we could spawn a random sparkle particle
on a chain if we wanted to, to draw attention to it.

important - we need to be updating how many chains the hookshot
has each frame! we cant just use 4 or 8 and 'deal with it'. calculate
the distance between the tip and caster each frame, then place
chain particles along the line between caster and hookshot tip,
in 16 pixel increments vertically or horizontally. we'll disable
casting hookshot diagonally, and we'll extend the actor's stateLocked
state to prevent them from moving until the hookshot completes it's 
travel...ugh... too complicated.

lets just draw a line between the hookshot tip and the caster,
as a black rectangle. we need to add this code into the codebase
anyway. then we can reuse it for the overworld, draw lines between
neighbors. ok, designs ready.

*the axe should draw a straight line from it's pickup point to caster,
upon it's returning state.








































DREAMS AND MINIGAMES
load a level, then change the hero's type to whatever enemy
type we want, and then if he leaves the field, we simply 'wake up'
or end the minigame, depending on how we want to do this.
very powerful and fun stuff here.



HOCKEY MINIGAMES
note: because we have ice tiles, if we added an object
that we could hit and move, but didn't destroy, then we could
play a form of hockey, using the sword and this object, and a
goal. we can decorate this goal with bumpers, or other things,
even hockey goalie npcs, and other players that bump the 'puck'.
this can be a mini-game. this can be combined to create spiders
on ice playing hockey, if you want, or it can just be random
enemy types, depending on the dream.





unarmored spiders++
they need to retreat in a random direction for 4 seconds,
away from hero, plus a random push sometimes. this makes their
next attack path more varied, and more difficult to spam the
forward attack strategy with them. also, there should be more
armored spiders, and there should be smaller spiders that
jump attack, from rescue dog.





Player2 Input

*we are not modeling player2 input at all right now.
*we need to do this.

Coliseum ++
if a second controller is plugged in, 2nd player should be able to control any miniboss
or boss in the coliseum, so players can fight each other. this also opens up a cheat where
a player can have a boss just sit there with 2nd controller input inactive and farm them,
but it's just easier to enable to inf gold cheat from the cheat screen, so why not?

Allow Player 2 to Control the Doggo

if hero has a pet, and controller 2 exists, then
pass this input to the pet. any button makes the dog
bark. b makes the dog dash. d pad sets direction.

the dog's bark pushes enemies or objects, so player2
can actually be useful. pet update: should only be able
to purchase a pet if player two presses A on the controller
during the vendor screen. this is because they will be
controlling the dog the entire game. no more dog AI.
if there is no controller 2, no pet.
if there is no controller 2 input, no movement.
pet cannot die, isn't actor, is roomObj with primitive inputs.

while in battle with boss, player can choose to control boss or doggo,
if doggo has been adopted. *this also allows for testing of bosses, using
a second controller, so we get to keep that logic seperate from main input.
yay!










Big Chests

big chests should exist in dungeons, and reward the master key.
this allows smaller chests to exist outside of keyroom and dungeons
altogether. also, we could randomly reward player with loot when
they open the chest, including magic or fairys or whatever.

















Doggo++

color pet doggo.
make doggo not shrink when in pits.
make doggo not fall into pits.
make doggo stick real close to hero.
doggo can never get too far away now.
doggo always spawns with hero in room.





House Roofs++

add detail to roof sprites: we can have roof
sides and corners, to better show where the roof
ends. like rain gutters and trim and stuff.
houses can look much better.




















Overworld++

Water Coliseum Path

water coliseum path (forest) (6)
645.575 -> up neigh = lavaisland main path 4
612.589
571.585
536.609
565.644
530.671

temple 1 path (2)
514.591
480.581

water coliseum level (connected to path above)
499.706




lava ship 1 path (2)
567.455 -> down neigh = lava island main path 8
572.406


lava cave 1 path (3)
508.538 -> up/r neigh = lavaisland main path 7
458.545
420.522

volcano coliseum path (6) (left to right)
150.522 -> up neigh = lave island main path 15
113.530
99.553
138.562
180.562
217.571 -> right neighbor = forest main path 27





plateau island main path (12)

plateau island misc paths (2)

plateau ship path (2)
299.629
255.616

lava sub path (7)

lava ship 2 path (1)

lava cave 2 path (2)

lava cave 3 path (2)

lava to cloud connection (5)





DEATH MOUNTAIN LOCATIONS+++



















> no chickens? no chicken sounds unless obj hit. then cluck. 
add chickens to town, dungeon room variation of dungeon vendor.
this dungeon vendor should exist in a square room, which we have
more of. there should be two variations - one with the vendor + sign,
and one with a chicken and sign that's different.


art++
remove orange/red from coliseum spectators
make spectators much more brown and less obvious




















>>>when does this happen? once all dungeons are created?<<<<
Dungeons++

when player defeats the boss of dungeon, the skull
on the overworld needs to collapse. just the top part
though - and it should smoke as if it's been changed.
this is to visually signify that the dungeon has been
beaten - ala SMB.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



SLIME, Swamp Dungeon

-because we're close to finishing the swamp dungeon,
we can use it as a prototype endgame dungeon (hard difficulty).

*create swamp dungeon entrance objs + level details - SLIME obj

we can do the slime obj rn - this just drops player mobility to 
pushing/dragging speed upon contact. super easy. then update the
swamp level, so swimming thru slime is annoyingly slow.








Slime and Lava Dungeons, Objs, Enemy Sets

*create lava dungeon entrance objs + level details - LAVA conveyor belt objs



shadow: from water + ship, into animated shadows (hard) - all black obj 




Overworld ++

locations should have a camera offset. so, when link lands on
a boss location, the camera centers on the skull, instead of link.
we can also do this with special locations, such as the cloud castle:
the camera should focus on the castles, panning the right.
this shifts the focus off of link and onto a specific obj in overworld,
drawing players attention to it - saying 'hey this is important'.

locations should be named on the map - this will help knowing each
location and how they are connected, and will aid in development.
however, this should be a static ui element overlay, that changes when
links lands on a location. thus, locations need string names to query.

a dungeon is composed of rooms, a field is a large room. we can
chain fields together using objects, similar to how we make dungeons.
this allows for a series of fields leading up to a dungeon or target.r



Overworld+++

if these lines are calculated each frame, and only for the current locations
on screen, then the locations can move around and be animated while
still properly being connected. link should track to his landed location
each frame as well, in case it moves around. we can even have location connect
dynamically, if they are close enough together. this would create a window
of opportunity for the player to move to this isloted location, which could
be useful or interesting in some way later.






Level 0 - masked tutorial level

initial level : at sea, boat is attacked, link uses his sword
to defend brandy from attackers. the ship cannot be left (stairs up).
once the attack is over, brandy converts to mission complete obj.
talking with brandy then ends the intro level and takes us to skull
island overworld location.

skull island - final boss, coliseum, vendors

link talks to the shadow king, who confirms that he holds brandys
love in his prison of death. the shadow king agrees to release 
brandys love if link brings the shadow king the 4 mythical beasts,
and defeats them in his coliseum for tsk's entertainment.
this sets the stage for 4 dungeons, then 4 boss battles.

undead island? we have graveyard enemies.
we could put these on skull island as special coliseum
fighters? secret skull island dungeon?

anyway, link defeats the 4 dungeons, beats the 4 bosses,
then confronts tsk, and demands brandys love be set free.
tsk laughs and then they battle. after battle, tsk tells
brandy the only way for her to see her love again is to
pass on to the other side, which she agrees to do.
link says goodbye, brandy becomes a ghost.
the final image is the boat sailing away with caption
'link continues on his quest..'

brandy's silver locket contained a map of these islands,
which brought brandy there. she knows her lost love is
somewhere on one of these islands.



































Ship Roof
put a house or roof objs on a SHIP and have a captain's
quarters or steering area ontop of the ship deck.
maybe even have stairs up to it. this could be part of an
abandoned ship, or broken ship. this needs to look different
tho- like a ship roof.




Fisherman

sits alone, at his house, fishing, wistling a tune.
around him are 4 bushes. talking to him shows a dialog
that he just wistles a tune and keeps fishing. digging
ditches to regrow the bushes around him changes his tune.
an exclamation point appears over his head. speaking with
him now, he says "my father was a farmer. i left and became
a fisherman. my father gave me these beans, but i've never
found a use for them. you seem to know how to grow things.
here, take them. he'd want you to have them.."
and then he returns to wistling his tune, just as before.
this is how link acquires the bag of magic beans.

Fishing
a fish obj can live in water tiles, hiding from link, displayed
as an underwater object. if link is swimming and uses the net,
he may catch the underwater fish in a bottle.
*we could also have a fishing minigame, where player mashes X
*using net in water could also pick up underwater objects

Houses in Water (fisherman's house)

can we build a house over water tiles? 
sure, why not? this means we can build an
entire town in the ocean...

do a mockup of this in a town by the water.

Swim Instructor NPC - should be near house in water.

we need a swim instructor NPC that stands in front of a large pond.
has dialog like:

do you know how to swim? i'm sure you do.
just hop in the water.

press B while moving to swim faster.
press X to dive underwater for a bit.

while underwater, enemies can't see you,
but you swim slower. 

try picking up objects and carrying them
into the water as well. have fun!

make the pond an actual pool-like arrangement.










could sell swords, bombs from one vendor..
the blacksmith.. he has explosive barrels nearby




Quest items should complete by rewarding player with a useful or interesting
item, like the raft. but, it appears in that questline's menuItem slot on the
UI - so we aren't wasting that space once the quest completes.



Vendors++
we need to decorate each vendor as special, and really think
about how we dispay them. quickly, but also intuitively and cool
looking. the current menu system is satisfactory, but would
look better with larger, custom pixel art for each vendor.
these vendors should also animate, with custom pixel art frames,
not 16x16 sprites. this adds another layer of art to the game.
we can do a modern anime style or more traditional mange style.. depends..




Waterfalls

there are water waterfalls, lava falls, slime falls, and maybe cloud falls.
in each case, link must swim up through the waterfall to access to hidden
area behind it. maybe this is a fairy pool. maybe this is an old may with tips.
when link climbs up the waterfall, splashes happen.







Bees and Beehive
can interact with beehive to get honey. bees are objs, sting link and
die. hive generates up to 10 bees, 1 bee each 60 frames, to defend the hive.
link can then sell the honey for gold at the port town. this is resource
harvesting and the beginning of an economy. sweet.







Ship battles and the Ganon Cannon

should be able to get a cannon for the ship, and should be able to upgrade 
the ship. maybe the ship is link's home instead of the destroyed mansion?
anyway, there are ship battles, and link's ship can be upgraded by completing
the sunken ships littered around the map. these increase the ships health,
speed, damage per shot, and firing rate. eventually you fight ganon on his ship,
and he uses his Ganon Cannon (tm). once you defeat his ship, then link fights ganon
in his ship's wreckage (at sea). so link has to swim between ship debris to stand on
and fight ganon, who likely can fly and has several forms. this is an entirely
optional sidequest in the game, btw, and doesn't complete the main questline at all.
ships smoke when they near low health, and ship battles are auto-started when link's
ship collides with a ship at sea. 
*there could be random ships roaming the shipping lanes to battle with. this way player
gets experience with ship battles prior to boss ship battle with ganon.




Volcano Island
on one of the volcano islands the volcano should erupt, shaking the screen and
spewing lava and fire everywhere. sound fx included. these fires should spread, burning
the level down - but there should be bushes next to water sources that regrow the
bushes, so the level always has something to 'burn' when the next eruption happens.
we can also put non-growing objs there like a house, which is quickly destroyed, and
could serve as a time target to get to quickly.






ZOO
we need to have a zoo where a bunch of world enemies are being held
behind posts. this is already in testing room data.




Fire++++
There should be objects that just burn, and never stop burning.
we can use these as decoration in evil or horrific levels



Clouds
just like pits, but falling thru a cloud causes player to spawn in the level
below the level they fell from, likely into water. this means all cloud levels
have a ground level or level they fall into.





crab spider boss?





Quests
collect 5 pieces of the ship's cannon from the sunken ships.
each sunken ship is a deadly puzzle in water with ship objs leading to a chest.

main quest: bosses + shadow king



Need:




Forest Island (indiana jones and the temple of doom)
3 temples, unlocks the primary dungeon entrance
each temple is a small dungeon with a few rooms, leading to a switch.
each switch raises a flag at each temple, this is shown on the overworld.
plateau cave: 
Boss: floating eye
watery lake is water coliseum


Thiefs Hideout 
2 watchtowers, each has secret entrance to hideout.
once inside, beating the dungeon unlocks the gate.
there are additional blackmarket vendors inside the hideout.
Boss: head thief
*note: thieves sacrifice people to kraken at swamp island

"house atop the trees"
*pully system to outside the fort?







Death Mountain
climb over water to cave entrance
Boss: vampire bat
sunken ship 1:
sunken ship 2:
top cave:
top island:
bottom island:
bottom bottom island:



Undead Swamps
lone skeleton island: contains sweet pixel skeleton giant,
plaque that can be read - tells hero how many times he's died
and what kind of "luck" he'll be having today, which doesn't
affect the game at all in any way.
boss: undead kraken
sunken ship:
undead coliseum on right



Volcano Island
climb over lava, with lava flow redirect via shovel puzzle
has a backdoor entrance with an even harder puzzle...
top rite cave: 
top left cave:
bottom left cave:
bottom rite cave:
boss: ???
sunken ship:

wide lava island: lava colliseum (harder colliseum vs lava enemies).


Cloud Island
must use magic beanstalk to climb up to skull in sky.
link gets a pack of magic beans, only this location / level uses them.
cloud dungeon is unlike all other dungeons, in that the
floor is made of clouds, which dissipate after being touched/walked off
of, which makes solving the dungeon much harder.
boss: ???
cloud castle: ???
**cloud island / coliseum is composed of clouds, and if link
touches not a cloud ( a pit), then he falls out of the clouds and
lands in the water level below, retarting any progress he made UP 
into the skull.


Shadow Island
shadow king location: requires 6 bosses being defeated
coliseum: open immediately, updates with additional bosses as progress is made
port town: where all vendors and most npcs are located
boss: the shadow king

DARKWORLD VISUALS
in the dark world, things are alive, scary, and "juicy organic evil".
think dripping fluids, pools of blood, pestilence, flies, tentacles, diseased rats,
etc.. it's a pretty nasty place - and we need a variety of particles to represent it.




Plateau Island
sunken ship:
plateau cave:



The Farm
farmer + chicken coup (after wife comes back)











something that flys around the map that the player
has to search for each time...





the pegasus boots are damaged, so that's why link cant dash like he used to.


Surfing + Raft

we need wind and a raft or board, then link can
surf when a wind projectile hits him, and carries him in that direction.
otherwise, he just hangs out on the board, standing there..
we can use a raft instead of a surfboard to keep theme.





------------------------- Farming ------------------------- 


implement the idea of seeds, sold by the farmer - 
AFTER link fixes his crops. link should only have to
fix his crops once. then we load the fixed farm level
instead of the dry farm level. 


should be able to plant crops, water them via ditches,
and then wait for them to grow into loot or special items.
this functions just like bushes and grass do in the game
already.

seeds are sold by the farmer, who is already implemented
in game. now, post-reward he becomes the seed vendor.
forcing the player to figure out how to regrow bushes
is the foundation of farming - watering seeds!




Farmers story:
the farmers family left because he couldnt feed them.
he couldn't provide for his family, and considers himself
a failure. when link regrows his crops, he thanks link
profusely and tells him that his family have been farmers
for generations, and they use special beans on their farm.
the farmer agrees to sell link his special beans, and gives
link a few to try out. he hopes to make enough money to 
get his family back. we should put an int value in saveData
to represent how much money link has given this farmer.
when this value exceeds 1000, then we should load the family
farm level, instead of the watered farm level (loaded instead
of the initial drk farm level). this gives the player a sense
of progress in the game, along with a cheerful reward for 
spending money with the farmer. essentially, doing business
with the farmer turned his life around and brought his family
back. double bonus: speaking with the wife or kids could open
additional sidequests or just reward link with special items.

Beans for Sale -
HeartBean : grows a plant that spawns hearts.
FairyBean : grows a plant that spawns fairies.
GreenBean : grows a plant that spawns magic pots.
ArrowBean : grows a plant that spawns arrows.
BombBean : grows a plant that spawns bombs.


Very Special Beans (cannot be bought) -
CloudBean : grows an interactive (dialog) beanstalk to cloud city.
**this is given to link by farmer's wife when she returns to farm**

DarkBean : opens a portal to darkworld.

Seeds: DarkBeans
we should be able to purchase dark beans
growing these beans creates a dark world 
portal that link can pass thru to the dark world. 
however, dark world creatures will randomly spawn 
from this portal too, so it's extremely dangerous
to open a dark world portal. but for the first 4
seconds (255 frames) no dark world creatures will
spawn, giving the player enough time to jump through
it, which also closes the portal, and would teleport
link to the dark overworld screen.

Seed: CloudStalk
like super mario bros, grows a beanstalk into the sky.
link asks "should i climb this? A/B".
doing so takes him to the cloud world.


My Chickens!
now that we have posts, we can make this sidequest.
this is an NPC with an expanding hitBox check for 4 chickens
nearby. surrounding the NPC is the posts, which form a chicken
pen. link has to pickup and deliver the 4 chickens to the pen,
then he gets the reward. this is part of the farm level.
however the NPC that checks for this (the farmer's wife),
wont return to the farm until link has spent 1000 rupees with
the farmer, purchasing his beans.


Hidden Seeds / Vendor Items
*if we push a shelf obj up to the farmer vendor,
he will sell you special seeds from his secret family
locker.. he mentions that he forgot about where he
put it prior to this - so the player has at least a hint.
this can be done by simply expnding the NPCs hitbox and
then checking for the obj in question.





--------------------------------------------------------------------










SWAMP ++

swamp rooms ++
swamp dungeon should be diff than mountain dungeon
in size and complexity. because it takes longer to
move in water, it will feel like the dungeon is harder
on a base level, so the dungeon shouldnt be that large
or complex. we're also going to be adding a water lever
critical path into this dungeon, so it needs to remain
about the size of the forest dungeon. the boss room
should connect to the hub room as well.

we desperatly need to improve the ugly swamp wall sprtes.
fix this to look slimy and grotesque.

- water temple / swamp dungeon ++
build crit path to hub, crit path to key, crit path to boss, 
*crit path to water switch (pullable lever)
*place water switch randomly in room/hub room
water pullable lever flips high/low water level boolean
when rooms are built they build high or low water levels, 
low water levels prevent hero from passing thru rooms 
there are low water levels in rooms along the key or boss crit path.
hero must flip switch to access key or boss rooms, or not.
boss is tentacles squid

Water Temple
	- implement water temple (big lever to change water level outside).
	- this makes the temple accessible by lowering the water to reveal the entrance.
	- water temple contains additional critical path to big lever inside.
	- pulling big lever inside lowers the water level, so big key can be accessed.
	- this is done by boolean in dungeon/level, waterLevelHigh.
	- rooms on the key path are filled with high water if waterLevelHigh is true.
	- else they are filled with low level water, which simply creates the feetFX.
	*important that player knows how big levers work prior to entering water temple.
	- for now, the water temple boss and enemies are same as forest dungeon.
	
WaterTemple
the water temple is accessible by changing the water level outside
via a big push lever. changing the water level is the dungeon's theme,
so the player needs to know how this mechanic works prior to entering.
once inside, the various critical paths need to be created with the
understanding that some of those rooms will be "flooded" and impassable,
and the path to the lever that drains those rooms MUST be passable,
or in this case - not flooded.











LEGENDARY BEASTS 
these are endgame top-tier optional bosses that serve as challenges for the
seasoned and accomplished player. they are unforgiving. and their "lairs" are 
diablo1 style dungeons (small single floors, with stairs down/up to bottom level).
legendary beasts are fought in hub sized rooms, since they are a bit larger 
than normal bosses. also, the enemies in the lairs are minibosses that may spawn
mobs, so this will be pushing the game's obj pools to their limits.












Dungeons++
dungeon map should display legend if hero has visited that
room. this makes it easier to track where special rooms are,
once the dungeon has been explored.

add dungeon vendors to dungeon systems. these vendors exist
in some rooms randomly (added in editor). should have to solve
a puzzle to get to them too. they sell special items and enemy
items. they can be marked with a V on the dungeon map.



Exits++
we should be able to make exits specific to dungeons as
well. they should visually introduce the dungeon, as well
as any basic mechanics: for example the swamp exit should
transtion from land to water, from the exit door obj. this
symbolizes that this dungeon uses alot of water tiles.





Ship Graveyard
add sunken/broken ships around, with vines
and various water objects. we need broken/damaged ship parts
to build decorative ships around the level.




Boat Flag

create ship flag animation sprites.
remove the jolly roger from it.
we'll use this as an overlay later on if needed.
add ship flag. it should animate and bring life
to the level.





Editor++

remove roofs button in top menu






Spikeblocks++
spikeblocks = swim under. indestructible. immobile.
we need immobile spikeblocks!
we can add these into dungeon rooms as well.








add a 'clean room' button - removes all roomObjs
not of group wall or door. thats it.
leaves us with a blank room with walls, doors,
statues, and floors.
add this button to a new widget.. somewhere..



add to forest dungeon:
eye statue - doesn't attack, can be picked up like turtle. 
doesnt move. hand placed.

floating sm eye - randomly floats around, explodes if near hero,
hand placed.













implement blob dungeon.
standard actor is blob.

Blob Dungeon + Overworld Pit

overworld pit is a non-blocking obj, 16x16,
that is placed somewhere in town level. hero
touching this pit causes hero to fall, level to
close, leading to blob dungeon.

Blob Dungeon
starts in an empty square room, the landing room.
in the landing room, the center area is empty,
and this is where hero spawns. there is no exit.
there is a small blob child NPC that will give
link the map, if link talks to the NPC. NPC is
invincible otherwise.

build path to hub room. (this is where we can load
the blob hub room with vendors, etc..)
build path to exit room. (we can have custom blob
exit room data here too)
add rooms, connect with secrets x2.
blob dungeons should be small and easy, without
miniboss or boss - like training wheels dungeon.



Separate Blob and Forest Dungeons

* the blob dungeon uses the town sheet *

create blob dungeon pit object - this will go on town level.
if hero collides with this obj, he falls into the blob dungeon.
this dungeon builds a critical path to the exit, which
dumps hero back out at last overworld location (or just town level).
-this moves blobs into their own dungeon, without a miniboss or boss.


add an entrance to the blob dungeon (this is pit obj)
from the town level. we can also move some npcs from 
the town level to the farm level, as it seems very
lonely there as is.


DaBlobs
the blobs live in the underworld, literally underground
of the light world. the have an entire culture, men, women,
and children. but they all look the same. they have thier own
building architecture. as blob link, you are mistaken for the
fabled hero blob that is told of in prophecy that will save
the blob people. this gives blob link an entire side plot
that doesn't touch the main plot.

Blob world
this is actually a series of rooms like a dungeon, but without
a hub room or boss room, and the hero's critical path is OUT
of the dungeon TO THE EXIT ROOM. this returns link to the overworld
map screen. in this blob dungeon city, there are rooms with buildings,
commerce, life. the blobs basically live in an underground dungeon.

as human link, the blobs will just ignore you with random dismissive
dialog. if you attack a NPC, the game spawns blob actors at all NPC
locations, then removes the NPCs - the end result being that the blobs
pickup swords and defend themselves from the evil human who attacked them.
we can also model this change using a boolean so future rooms spawn
blob enemies instead of NPCs.

as blob link, NPCs respond normally and all vendors are unlocked.
there is a spot reserved for the blob's sidequest in the hero's inventory.

How do we leave blob world?
the exit to the blob world is marked on the map, which the hero
gets from a helpful child blob in the room where hero's spawns into
blob dungeon. this is like a first peace offerring to tell player
that maybe they don't need to attack the blobs.










underwater objects / enemies
we have an underwater object sprite (should be on leevl sheet)
when an enemy falls into the water, they should become underwater
sprite (but keep their obj.type) - just change their current anim
frame if they touch water (forcibly). here's the trick - keep the
objs 'alive' using ai, moving them around UNDERWATER, where they
might eventually roam back onto land - ending their underwater
sprite state. this allows crabs, rats, turtles to swim and be
free to roam around levels without getting mercy killed because
they don't have swimming animation sprites.




In Game LoreMaster
talking with this NPC opens the lore screen, which allows
link to select a variety of items, enemies, and map locations.
the lore master then tells the player about the selected thing,
via dialog screens or something. this will be alot of text, so
it should probably display instantly. maybe this screen has a
scroll background, with selections... i dunno.




idea: on town level, we can have an inaccesible area.
then we have an entrance to a blob dungeon, which is built
very short. upon exiting the blob dungeon, hero spawns inside
the inaccessible area in town level. we use dungeon generator
to build the tiny blob dungeon, getting more use out of it.





SleepingBat
sleeping bat roomObject: uses the upside down
bat sprite from mountain's 31,0 frame. when hero
gets close enough, this obj becomes a bat world enemy.

put sleeping bats on the mountain entrance level.
DO NOT put these objs in dungeon room data.

Bat World Enemy
bat world enemy: bat flys towards hero and bites
him. if bat creates a bite projectile, bat removes itself.
*the difference between world bat and beefy bat is that
beefy bat can bite multiple times and has 2 hp.








*build level with spike blocks over water.
have to dive underwater to avoid them...







Link Story Quest Book
this is located in the quest section, and essentially
serves as the 'log book' or mission tracker for the player.
this has several steps, starting with visit the colliseum.
the quest book is how the player will track the main storyline too.
events that happen should be displayed in this log book.

Blob Story Quest Book
this is located in the quest section too, in a different slot.
this is only displayed if player has discovered the blob questline.
same as link story, but different objectives tracking diff booleans.

we need booleans for each dungeon BOSS defeat.
then the story quest book should display these boolean values.
we also need boolean for colliseum tournament completion.
then we add a boolean value for shadow king defeat.
this models and completes the required data for the ligthworld
storyline.






Hand from the Wall
a hand should come out of the stone wall and grab
at link - if this happens we could take link
somewhere else (level) or just damage push him.










Transitions Between Dark and Light rooms
this happens in a level, via a special portal object.
for now, we will use lttp's standard portal, but it will
only work one way: touching this portal closes the level,
and open the darkworld or lightworld map screen, depending
on if link was in the dark or light world when he touched
the portal. this doesn't transition between rooms.




Underground Blob Dungeon:
we have an overworld pit sprite.
hide this randomly under an object that can be destroyed,
like a bush on a level. for now, this object will
create a new type of dungeon, an underground dungeon.
this is just a single critical path from hub room to exit room.
just a hub room, then an exit room south of it.
in the hub room, a miniboss will spawn, with a chest.
the chest will have the dungeon map, in case we decide to expand
this dugneon algorithm to be more than 2 rooms in the future.
but, this reverses the dungeon - leading to the exit.
upon exit, we simply return hero to his last overworld location,
which should be stored in save data.
*these dungeons should be blob enemy only, because this is story*


Blobs need to have more weapons & items to attack and use.
can throw bombs. can attack with swords.




HitBoxes++
we're always expanding and contracting the hitBox.
we need dedicated methods for doing this.
we need to override/replace/rewrite xna's rectangle class.
but we need to keep the intersects() and contains() methods,
as they are, as fast as they are.







PLATFORMS + BUILDING
i like the idea of building platforms to cross pits or areas of insta-death.
but, unlike other games we're gonna use magic here to build platforms, and we're
gonna loop this minecraft/fortnite idea back to LttP by using the cane. in lttp,
we could build platforms using the cane, but only in specific places.
what if link could build a platform anywhere he was, the direction he was facing,
right in front of him where he could step right onto it (aligned to 16px grid).
these platforms would be permanent until the life of the room too, and cost 1 magic.


Rat Hole
we should have a 'rat hole' that randomly spawns
rats in front of it. we can add this to a room,
and the room now has constant enemies.


Tattered Shawl
the shawl could change hero's default
friction value, to be lesser than normal,
making it feel like he's moving faster - kinda
like on ice.
*currently, it does nothing.

Old Tunic
what does this do? it should have a purpose.








Wolves
16x16 wolf actors, with stats similar to link.
aggressive if health is high, defensive if health is low.
regenerates 1 health (up to 3) every 255 frames.
wolves are spawned in packs of 4 inside the colliseum.
defeating the pack unlocks the wolf pet, available from
the pet vendor in town. wolf pet acts with normal wolf
strat, but follows link and does not attack him (is ally).
if wolf actor dies, he can be revived by link thru
simple interaction. this revives wolf back to full health.




Shadow Objects
also, we need just pure black and a black to 0% alpha transition,
so we can create atomoshperic shadows / dark areas.
link should be able to walk into these dark areas,
and the darkness should cover link completely.
these objects would exist outside of any level sheet,
and instead be part of the entities sheet, because they would
always be black.

these shadow objects should go around the colliseum entrance?








-------------------------------------------- Dreams (Ideas)

clean beds appear in overworld levels (only
light world). dirty beds appear in dungeons
and in dark world. based on what level
the bed is on, it can cause different 
kinds of dreams.

clean bed: premonition dreams, which guide the
player towards the intended objective or goal
functioning similar to lttp's fortune teller.
this is concept art + music + dialog.

dirty bed, light world dungeon: creepy to weird
dreams, no premonitions, music / sounds with
black screen, concept art, random NPCs saying
random things or having non-sensical conversations.
mostly harmless and just kinda weird.

dirty bed, darkworld level: entrance to a randomly
generated dream-world dungeon, where link's objective
is to escape (find exit). Random enemies are chosen
for rooms, along with random dungeon textures for
each room. NPCs may be added to rooms randomly too,
which would spout gibberish from randomly combined
sentences and words. dying in the dungeon would
end the dream, as would finding the exit.

dirty bed, darkworld dungeon: why would you sleep
there? WHY? because this bed creates nightmares.
nightmares are special boss fights that are only 
accessible via this manner, and are incredibly
overpowered and meant to be unbeatable (unless
using cheats, lol) - but they don't affect hero's
rating or inventory post-dream. not all dreams
in these beds are nightmares, only rarely does
a nightmare appear - most of the time it's just 
the creepy dreams.

this makes beds become actually interesting 
objects, instead of just interior building decorations.
note that modifiers can be applied to dreams,
and ceertainly will be to nightmares, where the hero
only has certain equipment, or can only have 1
heatlh max, or has infinite health, or inf magic,
etc...

-------------------------------------------- 












- Non-room repeating Dungeon, additional rooms





	
Dancing
standing still, press B to make link randomly dance.
hold B to make link loop his dance.
visit the dance vendor to choose a dance.
link can only have one dance at a time.
unlocking dances can now be side-quests.


SideQuests
Various things can be unlocked that are completely
optional: all kinds of pets, dances, weapons,
items, armor, equipment, etc... these are all
contained within NPCs.










Windmill Sidequest Thing
windmil doesn't work because river leading to it is blocked by
debris. can blow debris up with bomb, allowing water to spread
to windmill, turning it - unlocking / opening something.
we can model if the debris has been exploded using a boolean,
and we can check this boolean when we build the level,
removing the debris if boolean is true, 
so player feels like they altered the level.
*once we teach player about windmills here, we can place
a windmill in the dark world that needs a ditch dug to it.
this could hide a dungeon entrance, for example.






mirage effect from snes:

for a set of pixels, copy the top left pixel into the rest.
then simply animate the size of the pixel set over time
4 pixels, then 8, then 16, etc.. this causes the 'warp' effect
on screen (pixelization). 
this is likely something we'd have to do as a shader effect,
or possibly as a final step over the 640x360 render surface.



*grounded non-basic enemies need full sheets (can swim)*
*basic grounded enemies will just be released() with a splash (no swim)*
*most mini-bosses / bosses are flying, so they dont have a swimming state*





Non-Repeating Rooms in Dungeon

we need to make rooms non-repeating in the dungeon.
it's cheap to come across the same room over and over again.

so when the dungeon is being built, we need a list of rooms (based on loaded room data)
then when we place a square room, we ID it, and strip that room off the roomsList
and if we run out of square rooms, then we just try columns, or rows.
this way the dungeon algorithm can never reach a point where there are no more rooms to use
which would be game breaking. also, we need atleast 10 fo each row, square, column rooms.






player AI

assuming the player can 'see' everything on screen, this is just an AI
looping over the obj/actors/entity lists, considering active objs in it's strategy.
then once a strategy is decided upon, the proper gamepad input is setup and passed
into the game. this ai could consider player state and retreat if weak, but instead
i think the AI should just cheat and refill it's health if it gets to 0 or dies.
in other words, there's an infinite bottle of fairies in link's backpack when AI is on.
or, we could just simply turn on invincibility.






Reaper
travels around the perimeter or the room.
if link touches him, link dies. reaper is unkillable,
and can change directions randomly, or bounce like 
spikeblock, etc.. reapers would roam mostly around
dark world graveyards or death-related levels.





fix how kick sountrack volume is handled
the hero's health sets the volume of the kick soundtrack
this check should be happening in the level class, not anywhere
in the assets or music classes, because the kick volume is only
changed during the level screen's life. when the screen closes,
it should ensure the kick volume is 0. this prevents issues we've
had before where the kick volume was above 0 while player was on
different screen.

we should include a soundFXinstance on actors that points to one of the soundFX in assets
then we can set this instance in ActorFunctions.SetType()
then later just call it generically, like Actor.AttackSound.Play().
same with hit sound, death sound, use sound.









because the blob boss has a cast sprite, he should be able to cast
revive upon his dead blob spawn randomly. this makes the boss fight
that much harder.

boss should 'stomp' dash, which creates an explosion where he lands.
we should have more frames of animation for this too.

boss blob's hit animation should be longer as well.
boss blob's death animation should be gory and long.
the final blob boss death sprite should have his guts hanging out.

blob's attack is to create a blob actor at it's location
this is done randomly





when hero dies in water, he sinks undewater..



*we need a sunken obj particle
this should be created whenever an object is 
sunk into water. the sprite is the underwater
sprite, particle has a life of 255 frames, then
creates an attention particle and releases().
this creates the illusion of an object sinking.
we could even have the sprite animated to get smaller!




DUNGEON FLOORS !!!!!!
we should have multiple rooms, each representing a floor, with an obj that transfers
hero between floors. this is easiest, and we can have as many floors as needed per room.
plus these rooms form a set, so we can build puzzles across floors, using a byte to 
track the room's floor level (basement, ground, 1st, etc...). plus pits can just drop hero to
a lower floor/room, unless it's the lowest floor which the spawns hero back at last door.





Samurai Training + Musashi's Blade
1 heart, 1 hit kill for both contestants.
this heightens the stakes and makes every move matter,
like in a real sword fight. there is a ladder of
samurai link must defeat. at the end, he is awarded
musashi's blade, after defeating multiple samurai
at once. musashi's blade deals 5 damage when link
is under 3 hearts. risk vs reward.
this samurai training takes place in the shadow temple.
The Shadow Temple
a dark, holy place devoid of enemies or npcs, except
one - the eternal warrior. he rests before the entrance
to the trials. he explains the trials, and grants entry.






Ratings Ticket
this is a menuItem that the player can select from the inventory screen
the info widget displays the current savedata's rating (k/d)
this is first 'story item'.






---------------- Final Fight With Ganon -----------------

should take place in a destructible field overworld level, 
in the dark world. and part of ganon's attacks should Push()
the hero - which means Ganon can win simply by pushing Link
out of the level, adding another layer to this boss fight.
this means the strategy changes to stay more in the center
of the level, closer to ganon, who is the largest actor in
the game. two additional reasons why this was done: 
1. ganon is a massive actor (basically 3x3, but really 4x4),
so fighting him in a traditional boss room just isn't fair.
we need a larger room, so let's use the largest room for
the largest and (hopefully) hardest boss.
2. this allows the player to leave the level at will,
if they are getting overwhelmed and dont want to die.
this could lead to some funny moments where people
bail from the fight due to stuff ganon could do/say.
bonus 3. it throws something new at the player at the
endgame, as if to say - "hey, we ain't done with suprises"
because this transforms an overworld level into a shortcut
straight into a boss fight (after some dialog). before
this, we should never use an overworld level for a boss fight.

phase 1 - just ganon, with slides + magic + summons (1 beast head)
phase 2 - ganon alternates between beast form (phase1)
and black fire form (phase2), where he creates 6 beast
heads that link must defeat before ganon toggles back
to beast form.
phase 3 - ganon "explodes" and his head flys around,
shooting fireballs very similar to "blind" from Lttp's
darkworld bosses. these fireballs leave groundfires.
phase 4 - ganon transforms into his black fire form
and has his final dialog with Link.

when ganon's level is built after the final fight,
we check the ganon battle boolean and if true,
then ganon is replaced with a roomObj called Ganon's Soul,
which Link can interact with. this is ganon essentially
trapped and powerless in the dark world, begging link
to set him free. if link sets him free, then we flip
the ganon battle boolean false, reload level, 
and start it all over again. lol.

----------------------------------------------------- 










Darkworld hand enemy:
this is the dungeon hand enemy from the dark world forest dungeon.
drop randomly from the top of the screen, or burrows from underneath the ground.
RAPIDLY runs around (not attacking player), then burrows / hides. Has super
creepy sounds, only meant to creep out the player.



explosions should push bomb projectiles.
it would be so easy, and it would make bomb projectiles feel alive!
placing bombs next to one another would be unpredictable past 2-3 interactions




- can we 'reboot' in 1920x1080? can we have player input to set the size?
on Dx, this is easy. on UWP, this is not so easy, but also doesn't matter terribly.
this could be modeled as an enum value in flags: if(Flags.platform == Platform.DirectX)
then we could handle rebooting the game into 1920x1080, or:
1. set window size to match monitor display resolution, enable fullscreen
2. scale game up x2, x3, x4, etc.. based on height + width available
3. center the game's renderFrame / target to the window
4. draw the game frame centered with black bars around it

- this should make the game display as large as possible while still pixel
perfect on all monitors / tvs / displays. 
***can we do this from an options menu?***




*** we could have a massive tree trunk without a top for the entrance ***
the trunk would just keep going all the way up to the top of the sprite sheet,
and we'd place the dungeon entrance near the top of the level, always.
this way, it appears like it's much bigger in game, and we can surround it
with various smaller trees to increase it's relative size.
plus, this tree looks like it belongs in the dark world. rt.


add signpost obj that hero can read to dungeon entrance level discussing dungeon.





add animated floating clouds to the overworld screen




quad black rectangle transitions
4 black rectangles converge onto link, simulating Lttp's circular black transition
between levels, etc.. 
this will replace the level screen's overlay fading in/out



- EndlessForest Demo (shows off gameplay, complete on it's own, camera tracks to hero).
- this is randomly placed bushes / trees / grass + ANY enemy type
- room rec tracks to hero, expanded room rec cleans up anything that doesn't touch it
- as room moves, *generate random stuff just OUTSIDE of room rec*
- this means, as hero moves he is always 'finding' new stuff, even if he doubles back
- npc outside endless forest dialog = "once you go in, there's no way out..."
- later on implement magic mirror, which returns hero to overworld screen



SPIKEBLOCK++
what about a spike block that rotate right or left every 100 frames?
this would cause it to rotate around something, unlike any other spike block seen before... harumph!
this is simply a spikeblock sprite with new obj enum, as a projectile or roomObj,
it's behavior simply counts up to 100 then switches it's compMove direction thru a series
either right or left. thats it. hahahahahaa




dripping/shiny particles randomly on the trunk.

freeze an enemy, sprinkle magic powder on them, smash with a hammer = full magic pot




Special Sword Attack
should be able to charge up attack and spin just like Lttp.







********** ENUM FIELDS - OH MY GOD, IF THIS WORKS... **************

masterwork: the bitFields used in cursedCastle were FASSSST.
recall that bytes are the same cost in ram gets/sets as booleans, 
which we can abstract into enums.
so instead of booleanFields, create byteFields, using enums.

byteField 1 : blocking objs (walls, doors, objs, etc)
byteField 2 : decorations (test to see if decoration tile is 
occupied by blocking obj tile, via byte comparison)
if(decorationField[10] > 0 & blockingField[10] > 0) {} //remove decoration, it's overlapping.
this is faster than the collision check approach we use now.
WAAAAAAAAY FASTER. so we can build more procedurally complex rooms,
faster.

they'll be just as fast, and you can model each tile as
many different ways as you want to, for water / islands / rooms
anything.. this could actually make procedurally creating rooms
ALOT faster, because we could build the room up using two enumField
lists - one for the doors / walls, and one for the interior objs (xml objs).
we wouldn't need to do collision checking between objects, because
we'd be setting the tiles by value, and not by position (conceptually).
so, maybe we spend some time investigating enumFields...

********************************************************************











BIG OPTIMIZATION
if we don't draw the floor tiles, the draw loop is much faster
so, we could standardize the room sizes, then create a floor sprite
then instead of drawing 200 floor sprites, we just draw 1 larger floor sprite





Lttp Stuff we're missing:

PULLABLE LEVERS
these are built into the wall and open shut doors, just like a switch
these must be pulled for a bit tho, and there are decoy levers that will
spawn snakes or explode..

these large levers should be reserved for dungeon changes,
like flooding the dungeon, etc.. which we could model simply 
with a boolean, which would then add shallow water to all rooms,
and change pits to deep water, making some areas PASSABLE! yes.
this is how we can procedurally shut off areas of the dungeon. ah, perfect.

example, the hub room could have a big lever that floods the dungeon
and the hero must pull the lever to flood the key room, because that
key room has a chest surrounded by pits, which is totally inaccessible.
we could also put the big lever in some random roomm, or in its own
special room, which would be present in dungeons that can undergo
structural changes (like flooding)... hmm...










DUNGEON NAMES
dungeons should have names.
the dungeon name should be displayed on the map.
dungeon names could be randomly generated from a list.




LINK FLOATING
a specific loadout should allow link to float + move, without dashing tho.
something that makes him light as a feather (armor/equip) plus the repaired
pegasus boots. note: when the pegasus boots are repaired, there is no immediate
benefit as dashing works the same before and after. it's just partA of this combo.
partB is getting the equip/armor.





UNDERWORLD DUNGEONS
there should be dungeons where the spawn room doens't contain the exit.
rather a critical path is built to the exit room, which contains a ladder
that leads up. climbing this ladder exits the hero to the overworld screen.
finding this exit is the primary objective of this dungeon type, which a
player might fall into from an overworld level. along the critical path to
the exit, the player could run into: minibosses, loot, secret rooms, branching
paths, portals, etc...

these underworld dungeons come from overworld level objects, like pits, bombable
doors, pipes, etc...





PLATFORMS + BUILDING
i like the idea of building platforms to cross pits or areas of insta-death.
but, unlike other games we're gonna use magic here to build platforms, and we're
gonna loop this minecraft/fortnite idea back to LttP by using the cane. in lttp,
we could build platforms using the cane, but only in specific places.
what if link could build a platform anywhere he was, the direction he was facing,
right in front of him where he could step right onto it (aligned to 16px grid).
these platforms would be permanent until the life of the room too, and cost 1 magic.


INCREASE MAGIC
we do need a way to increase our total magic, tho.
just like hearts, this item should be sold be the items vendor.



Slippery Slope!
*if we slide a bomb across ice, then onto grass,
the bomb keeps sliding as if it were on ice. it's a pro.
so maybe we aren't resetting the friction prior
to checking projectile interactions with roomObjs?





BURNMARKS
groundfires should leave burn mark.
explosions should leave burn mark..

EXPLOSIONS++
add 'burn' mark particle for explosions
should last for 255 frames, mark the ground dark, then fade away.
sprite.alpha = (float)obj.lifeCount * 3  //when this drops below 50frames, it will fade out
*this can be reversed if life is counting up instead..
if life > 250, alpha = 100 - (life - 250) * 2;






















PROPERTY, BANK ACCOUNTS, + THE ECONOMY

so, the hero can only have 99 rupees on his character.
however, he can open an account that allows him to store up to 999,999 rupees,
if he pays 99 rupees at a specific location talking to a specific person.
then throughout the game, the hero can withdraw or deposit money thru a bank
representative, which are characters scattered around most vendor based levels.
this allows the player to store more money, and get access to it when needed, 
while still having to pick and choose what to buy and carry with them.
*later on, when a business is for sale, the hero must have a bank account to 
purchase the business or property, because that's how the deal is handled thru.
without a bank account, the hero wouldn't be able to possess enough money to purchase
any business or property over 99 rupees...




OVERWORLD SCREEN MAP++
add tiny smoke particles coming out of some houses




MAGNETIC ISLAND
this is a set of levels where a Push() is applied to EVERyTHING each frame.
the direction could be magnetic north, or it could be changeable by object or season.


WIND + WIND MAGIC
this applies a max force Push() to everything on screen except hero, based on
the direction hero is facing. this wind magic can be re-used in game as wind, if
we turn the force down to something more manageable, play wind sound fx, and blow
leaves / dust when it happens..




PUSHWAND + LIGHTWAVE PROJECTILE

the flame throwers on the ground shouldn't shoot fireballs
they should shoot those light wave things, which dont deal damage to what they hit!
they actually only push what they hit, and they dont die upon a collision
they will continue to push whatever they collide with until they die from age
this means we need a new type of projectile, which is exciting

and we can use this wave as the projectile created from the wand!
we can call it the push wand, which would allow us to create a whole new type of puzzle
where we can use the push wand to move objects to solve rooms!!!


Projectiles++
WanderingFire 
this is just like spikeblock except the obj.direction is chosen randomly upon collision
the direction cannot be the current direction however, and can only be cardinal	
should be able to place wandering fire using tools widget


MAGIC POWDER (?)
**if you sprinkle magic powder on a dead enemy, he comes back to life at 100% hp
but, he's still your enemy, so i don't know how useful it is practically...




Circling Stars
just like Lttp, the circling stars turns hero into an enemy actor type
except, it's not on a timer. hero becomes enemy actor type until 
Circling stars collides with hero again.
this is a check: if hero.type != hero, become enemy, else become hero.






WorldUI++
when the hero's health changes, the worldUI should animate hearts individually
if the hero gains 5 health, each heart should scale up, then animate down
once that heart's scale reaches 1.0, then the next heart can animate
this sequential scaling should happen anytime hero's health changes



Boss dialog + Boss phases
initially the boss should popup a dialog mocking player
after boss hits half health, another dialog should popup
this one talks about boss changing tactics
"you're better than i expected"
in the 2nd phase, the boss moves AWAY from the hero
so its harder for the hero to hit the boss
in first phase, the boss just randomly moves around







Handling corrupt game files & first run setup - part 2

if a saved game file has correct XML headers, then game will load it
any fields that match to saveData's fields will then be loaded
theoretically, we could load an XML file that has no correct fields,
and the game would never know.. 
this makes it impossible to check if the loaded data is corrupt or accurate.
only XML with malformed opening header tags will fail to load.

we need a way to check that the loaded xml is actually a game file

create a saveData instance, set all it's fields to null
then load the saveFile into the null saveData
then check each field of the saveData to see if it's not null
if any field is null, then the loaded saveFile was corrupted
however, we can probably extract some data from the corrupt file 
so we could prompt the user with a dialog that asks 'load uncorrupted data?'
'the file i loaded is corrupt. should i try to recover it?'	











*************************************************************************
MAYBES (these may/not be possible?)




DungeonDesign - Taking it Further
there should be 'architectural puzzles', where the dungeon changes in some way
this could be raising/lowering water levels
moving forward/backwards in time
destroying parts of the dungeon/rooms
using switches to alter the paths thru rooms, or alter the nature of rooms
however this is done needs to exist ontop of the already built concept of
critical paths, where we procedurally build smaller crit paths to complete
the overall dungeon.


BITE from all the other awesome games you love:
	theres so much to do and explore
	we need more to do and explore
	should be able to speak with more people/npcs
	should be able to manage traders, adventurers, etc.. (blackflag?)
	should be able to craft advanced items, using special parts + gold
	
Make the AI system Behavior based, where a Behavior is an enumerator

actor.behaviors = new List<Behaviors> 
{ Behavior.Aggressive, Behavior.Curious, Behavior.Destructive }
Behavior.Aggressive (actor will pursue hero without regard for safety)
Behavior.Attacks (actor will attack hero, if hero is close enough)
Behavior.Curious (actor will randomly explore the area around them)
Behavior.Destructive (actor will attack any destructible object it comes across)
Behavior.SpawnsMobs (actor can spawn other actors, based on actor.type)
Behavior.ThrowsPots (actor will pickup and throw object it comes across at hero)

an enumerator, and a list in the actor class.
then we modify the AI method to work based on behaviors.
if actor.behavior[i] == 
- aggressive, move actor towards hero, if hero is visible
- attacks, attack hero if hero is close enough
- curious, randomly move actor
- destructive, attack destructible objects nearby
- spawnsMobs, randomly spawn mobs based on the actor.type
- throwsPots, picks up nearby pots, carrys them, and throws them at hero if hero is visible










