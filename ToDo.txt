
"As we enjoy great advantages from the inventions of others,
we should be glad for an opportunity to serve others by an invention of ours,
and this we should do freely and generously."
- Benjamin Franklin	


VisualStudio Shortcuts
F12 + selected word = goto definition
CTRL + M, +O = opens, closes regions


The Big 4:
"Give the player meaningful choices to make."
"Remind the player of their choices."
"Recognize and respond to what the player does."
"The Gameworld is a character that reacts to the player."


- Milestones -

Forest Islands complete
Death Mtn Islands complete
Lava Islands complete

Cloud Islands complete
Swamp Islands complete
Thieves Hideout complete

Shadow Dungeon, TSK Fight complete




0.77 playthru: https://youtu.be/_b7qclGTffE
0.79 goals:
	X removed savedata and load/saving
	X wand & spellbook
	
	X split pool into more efficient lists
	
	X wind pros - on their own pool list, interact with ints, acts, pros
	X level data ++ - wind direction, intensity, frequency
	X WIND magic
	X ICE magic
	X EXPLODE/BURN magic
	X ELEC magic
	X SUMMON magic
	
	EARTH magic - quake
	
	+ option for loading level data 'fresh' each time for sandboxing
	(items: hookshot, axe, beans)
	(interactions: X WIND, acts/objs in water)
	(dungeon: X marked map PLS, working puzzles, X per dungeon roomdata)
	(X smaller ram: title image is complete, can be own sheet, no big text)
	(pets: stable, more pet variety, multiple pets (actor mini pool in fun_hero)
	better coliseum - uniq objs + enemies
	better overworld - more skulls, waves, cluds, vfx @skullIsland
	working summary screen, displaying all dungeons record data
	
Today:








Progress++

we can remove alot of stuff from the common objs sheet:
all tooth in water sprites, all coliseum walls. done.

we need to add big shadow cover back into game.
is this an ind or an int? i think it's an ind.
added back in as an ind, tested and working.

improved skull island coliseum level data.

cleared all int objs from forest, swamp, lava,
cloud, theives dun, and shadow int widgets.










Editor++

put lava objects in the lava int objs widget. huh.

lava, bridge, pit teeth top + bottom.


put boat barrels into world/end objs int widget, bottom row slot 1.
next, put world barrel. then pot. then skull pot (dungeon pot).


move fairy into NPC objects section.
seperate unique dungeon objs from common dungeon
objs in the dungeon objs widget.

floor torches go above stains in dungeon objs sheet.
these are common objs. unique objs go up top.









PitTeeth++

pit teeth should be part of common objs sheet.
pit teeth should sort to be gray/dark red.
pit teeth are no longer dungeon objs, remove them
from dungeon objs sheet.

make left and right pit teeth.
make larger lava objects/sprites too - we will be
filling levels up with lava soon. lava should damage
hero for 1 heart and respawn him back at last point (it
already does this, but lava 2x2 will need to as well).
















we need as more locations and level data files now.

all coliseums.
all dungeon entrances.
coliseums go with the island set. not in it's own
class.

this means we need over world paths to the coliseums.
this means we need ind widgets dedicated to coliseums.
this is a 2nd display set for IND objs.
move boat and all dev widgets to 3rd IND display set.
we will also need to create a dev0 ind widget, to replace
the shadow coliseum widget we will be losing.
all coliseum widgets should follow shadow coliseum's
format (copy + paste it). including hidden objs, and entrance
collision rec changes.



















Entrances++

instead of 3x4 ind objs, we will be using a massive 
sprite, with invisible ind objs to complete it's hitbox.
hitbox is based entirely on how the sprite looks.
for entering these levels, we will stick with the large
black shadow. it's cool.

we will be using massive sprites for dungeon entrances 
and coliseums. lots of invs ind objs will complete their
hitboxes.


we need various sized ind objs to do this properly:
1x1, 2x1, 1x2, 2x2, 4x4.


then we design massive sprites for the following:
forest
death mountain
thieves den
lava
cloud 
swamp
shadow skull

then we make massive sprites for the coliseums:
forest
death mountain
thieves den
lava
cloud 
swamp
shadow skull



*need cloud objs
*need slime objs
*need more lava objs
(this is to help theme the island levels better).







Coliseums & Towns++

coliseum should have big windows, big skulls, look awesome. custom bricks.
shadowking should have animated shadow pillars throughout the water.
the entrance to the shadow dungeon should be animated. there should be fires
burning in the water around the shadow entrance.

there should be massive skulls around levels. 
we also need ind and int skulls that link can interact with or block him. 

the visuals for shadow town should be redesigned on the overworld map
to have more skulls around and in it. these skulls are made of rock and are brown.
those skulls are ind objs. the skulls that are white are interactive objs that link
can pickup and throw and carry. consider making those skull sprites a bit fuller
in the cellsize, so they fill their frames up better. this is across all
dungeon sheets too.










Dungeon Sheets++

*we still need custom dungeon sheets for lava, cloud, thieves den,
and shadow dungeon. diff sprites, with proper color pallette.
























Fix Ditches and Digging

Ditches shouldn't have green around edges.
new ditches will sort over objs underneath them, and remove 
some others to be efficient (but they must stack visually).

Grass++

cut grass should grow into tall grass if near coastlines,
or filled ditches.
*this actually means we need to look into how water and
fire objs spread across objs. 
with water spreading, we should be using water objs to expand
and spread - not individual objs vs water tiles.

waterable - can be regrown by water
burnable - can be altered by fire
freezeable - can be frozen by ice

DITCHES++

Fix bug with ditches - they start off empty but self
fill, which makes no sense. they need to be empty, then fill
once connected to a water source. this water source should include
all coastlines. when a ditch is added over a coastline, the coastline
should not be removed - the ditch just sits over it. *this is only for
1x2 tall coastlines, small coastlines 1x1 can be removed for int obj
budget efficiencies.
explosions can leave behind ditches where they happen.
then, ditches can connect like they would via shovel digging.
inspect how ditches are being handled.

objs that regrow: grass & bushes
























Dialogs++

when we beat a boss - it swiftly kicks us to the overworld map.
we should instead pop a dialog telling player what happened! then
kick to overworld. later we can replace this dialog with a cutscene.

reduce hold time for picking up the map. we pop a dialog anyway, so
player has all the time to read and recognize. 

pop dialogs for all bottle uses
-health, magic, combo, fairy, blob.
simply explain whats happening.

when hero runs over a map, it puts hero into a reward state.
this should not happen, instead just pop a dialog and dont mess
with hero at all - because he may be in the middle of battle.






















































Ships Captain's Quarters

*what if we had a captains quarters instead of the engine obj?
*single obj for roof, upon collision with hero, hides itself. not destructible.
(boat generally isn't destructible).



Stop Fire Spell
this is a fire spell that kills all ground fires in the room.
simply calls Kill() on them all. this allows for control of
fire spreading, if we dont want something to burn, for example.







Ice Tile Melting++

fire melting ice is good, but it needs polish.
when we melt ice, we should create a wet spot particle,
which lasts for 200 or so frames, and helps to ease 
the ice tiles transition out of the world, since it
just dissappears right now. this can just be stain obj.




BURN HOUSES

as in, have burned versions of each house obj that randomly
smoke and rarely collapse (like roofs randomly collapsing).
this should apply to a certain set of objects only.
consider making these objects in their own pool, because they
handle interactions and can be blocking / non-blocking.
indestructible objs ONLY BLOCK, and NEVER INTERACT.

all these house objs are on thier own sheet btw...




Big Magic Container + Frozen Smashing Damage Bonus

implement the hammer + ice bonus damage, plus the big magic
refill loot spawn. this is a special call in functions_loot,
specially made for hammers destroying iceblocks with actor or
object refs! with this check, we always spawn a big magic container.
which means, we need a big magic container.. lol..

rip this from lttps sprites.




Implement Cane of Somara (or whatever)
this is the cane that creates blocks that are pushable.
this makes it MUCH easier to get thru dungeons, as many
rooms rely on floor switches, which link can simply
create a block over. if a block is created ontop of
a blocking roomObject, the block ... pops out of existence,
self-cleaning.





















DUNGEONS!

Improve RoomData +++++++

add long narrow rooms to dungeons.
add wide short rooms to dungeons.
breaks up square room repetition.
makes dungeons feel different too.

split up between dungeons now! we want forest to have
it's own set of forest room data (diff folder), than
mountain than swamp. this means we have ALOT of roomData
now which is fine. BUT we also need to be writing these
rooms to their .cs file specific to forest, mtn, swamp.
this includes expanding the Dx backend writing methods 
to handle this. we will also be keeping this xml data
seperate, and hopefully smaller andn easier for VS to
parse when it does so.

this allows us to theme roomData to the dungeon it will
exist in, for example - bushes and trees in the forest
dungeon. lava obj errywhere in the lava dungeon. slime
specific to the swamp dungeon... etc...

plus, we already know what dungeons will exist, so can
go ahead and create these .cs files and routines now:
forest, mountain, swamp - +lava, +cloud, +den, +shadow
*those are the 7 primary dungeons in the game.

**we need 1x1 water objs for better dungeon room design.




















Environmental Spell Bug

there is a state coming up soon where two environmental
spells may be cast against each other. this cannot happen
simply because the pools cant handle that. so, instead, we
need to have a environmental spell boolean that protects
against this dual-env spell cast state.





Explosive/Fire spells
Circle of Fire - creates groundfire around the caster in circle, across frames, continuously.
Fire Rain - red rain falls, creating ground fires where ever they touch (environmental fx).


Ice Spells

hail - large snowball objs fall, causing level 1 destruction,
creating icetiles where ball hitbox overlaps, mostly single ice tiles.
this is diff pattern than iceballs.
snowstorm - freezes all objects in level (frozen state), distrubuted
across frames, randomly freezing objs and placing icetiles
ice block wall - create wall of destructible ice blocks (only blocking, with ice
tiles underneath and around them).
ice block freeze all - freezes all actors with iceblocks that can be
frozen (non minibosses and bosses).



Electricity spells
ether - bolts from the sky (should have small clouds over them) (should
happen across frames too)
thunderstorm - clouds appear randomly, spawning bolts down
*levels should spawn clouds too - can 'rain' regrowing objects,
plus this adds depth. they can rain lightning, fire, ice, etc..
think of them as magic or projectile factories that interfere with
the player...

new ether
this just sequentially does the bolts, not all at once, and also
randomly spawns bolts around the caster (but not touching).
THERE SHOULD BE CLOUDS!







Quake Magic Medallion

how is this different than ether, in-game? ether kills
all, quake destroys everything that isn't flying. this
causes des level 2 to all objects and enemies who have
compMove.grounded set to false, except hero.
this simply shakes the camera for it's effect.

Summon spells

skeletons - actors that cannot be killed (self-rez from extended hit state).
summons 1, 4, or 16 or them.
bat summons are already done, more or less.

Comet Medallion

meteor/comet (single big / many small) falls from sky, smashing into ground,
leaving crater objects and explosions. this is the 4th medallion, meteor.

SpellBook++

need a widget / window that displays in the spell
screen that matches options widgets dimensions.
should simply contain text that explains what magic
is and how it's used. for example, WIND counters.
































Fire Tornado
should be able to cast a fire tornado. this is obtained from fire tornado island,
by solving the puzzle and defeating the fire tornado destroying the land. this is done
by changing the wind direction to force the tornado over water, which extingushes the
fire and settles the tornado down. this unlocks the fire tornado magic somehow.
*weathervane - hitting the weathervane changes the direction of the wind. this allows
link to move the fire toronado out to sea and off the level. once this is done, the 
fire tornado magic is unlocked - or something else. i dunno.








Default Dungeon

the default dungeon sheet is the one we use for all
overworld / field level dungeon objects. this means
this 'dungeon' has a green grassy floor.

the pit teeth default to brown, which is part of the default
sheet. this default sheet should be thought of as the 'world' 
dungeon sheet - these pits will appear on the overworld against the
expected green bkg color. so the default pit teeth need to be green,
leading into brown as they go down into the ground. 





Coliseum++
we need 'windows' that look into the coliseum,
like the overworld sprite depicts. plus, I don't like
how the coliseum level is unbalanced and to the right.
instead, the coliseum - and all subsequent coliseums -
will be entrance centered to level, north of spawn.
this 'presents' the level much better, because coliseums
have no required puzzle for entry.

a window is a 3x4 obj, with baked in bkg.
so this saves us a lot of roomObjs.



Coliseum++++
we also need to have the large skulls be a 2nd object
that can sit on the ground, indestructible. this way
we can decorate the shadow coliseum appropriately.
we should add this skull detail to the overworld map as
well.





















Bag of Seeds

this simply allows link to place a bush stump, for now.
digging ditches + water tiles + bush stumps = farming.
this is next to magic mirror.

this forms the foundation of farming in the game.

when we click on the bag of beans, we should get a smaller
UI popup that lets us choose what type of seed we want.
for now, we only have bush seeds. these seeds grow bushes,
when planted next to a water source (coastline, water, filled ditch).
once the bush "grows", if its cut, it will leave a stump and
that sequence handles itself.

The Friendly Plant Seymor

-special seed, when planted, spawns a large plant that bites
any enemies near it, dealing them damage, while ignoring link.
this makes it a strategic weapon. these seeds should be limited,
unlike the infinite number of bush seeds link has.
this plant essentially dupes the tentacle actor's functionality.
-after taking a certain amount of damage, the plant dies, so it
cant block and attack in an invincible way. this means it's an actor.
when this plant grows, it spawns the actor and removes itself.

Vine To The Sky

-special seed obtained from fisherman. when planted at cloud
location will spawn a big vine into the sky that link can interact
with. for now this is just a dialog asking if player wants to climb vine,
and if so, then we load the 1st cloud level. later on, link should
be able to actually climb the vine, just like a mountain wall, but the
whole vine is a climbable foothold object. once link collides with a
light obj in the 'clouds', we load the cloud level, or we load the overworld
with link on a cloud location - which allows for much faster traversal
up the clouds later! awesome.

*requires two cloud levels, so we have to touch level data and XML>CS pipeline








Summary Screen++

Summary Screen is not properly displaying player data,
or info about any dungeon record playthrough.

dungeon records should be reset upon dungeon build.
we should be adding the dungeon data properly upon
completion too.




Display Playtime (in inventory?) keep this offscreen.

need to add timespan to playerdata to track playtime,
so we ca display it under repo name on right.








