
"As we enjoy great advantages from the inventions of others,
we should be glad for an opportunity to serve others by an invention of ours,
and this we should do freely and generously."
- Benjamin Franklin	
	
Gif Capture process:
	run game in release mode
	run LiceCap, expand capture area past program window about 10 pixels on each side
	record at 30fps, open in photoshop and crop the frame down to just the game view (minus window title)
	reduce image size by half, down to original size so pixels are 1:1 ratio
	save as PSD master, then begin cutting out sections/edits
	the default time per frame (set by licecap) is perfect, do not change this
	save for web ->  GIF 32 Dithered, filesize should be under 3mb, loop forever
	test in browser to ensure proper fps

CTRL + M, O = collapse functions/regions
CTRL + M, P = expand functions/regions

adding a new particle/projectile:
	add new gameObject type for PP
	add new gameObject animation list for PP
	add codepath for PP to GameObjectFunctions.SetType.
	add call to spawn PP somewhere
	maybe set the alignment of PP in ProjetileFunctions.AlignProjectile()
	maybe projectile interacts with Actor/Obj in InteractionFunctions.Handle()

adding music:
	music should be compressed down to 22K sample rate, mono.
	files are then saved to .ogg and added to content pipeline, built on high quality.
	
ram useage:
	98mb on Win10. 98mb on XboxOne.
	
	
	
	
	
todo:



(Work on DirectX project until Release)






Add animated sprites to Overworld Map - part 1

updated the map texture, removing the red placeholder dots.

Overworld Screen now updates and draws Pool.
tested particle creation, life, and display with a fire particle.
playtested, working as expected.

moved explosion + fire sprite down in main sheet.
updated explosion + fire frames in Functions_GameObjectAnimList.
playtested, working as expected.

added enum value ParticleMapFlag to ObjType.
added animList value for ParticleMapFlag to Functions_GameObjectAnimList.
added path for ParticleMapFlag to Functions_GameObject.SetType().
playtested, map flag particle animating + drawing as expected.

removed flags from castle in overworld texture.
placed flag particles on top of castle.
added flags to colliseum + old town.
playtested, drawing as expected.







add waves around map in water
add tiny firepit animated sprite to tent town
























reorganize all classes that refer to Dungeon, should be called Level
screen dugneon should be called screen level
functions_dungeon should be called functions_level





secret rooms tend to prefer connecting on the top left corner
they rarely connect in the center of rooms, which they should be doing

if hero strikes a bombable door, play a hollow sound
if hero strikes a cracked wall, play a filled 'tink' sound (metallic tap)

this is a : sword projectile collision check against objects of type door bombable + wall cracked
we'll need to add the hollow sound - we've already got the metallic tink sound




in order for rooms to be 'consistent', we'll need to store the index selected for the XMLroomdata list
each room should have a XMLid int. this is the xml roomData list index for this room.
when the dungeon is created, all the room XMLid values are assigned.
then when a room is built, we choose the xml roomData list at [XMLid].
this means the room will be built the same each time hero enters it

in order to test room 'consistency', we'll need to add more roomData
boss, hub, key, column, square, row




























Conveyor Belts ++
hero creates a sword projectile on conveyor belt
hero is moved by conveyor belt into his sword projectile
he takes damage. this should not happen

certain projectiles should move with the conveyorbelt
this would be the case with bombs, weapon swings, etc...
but not flying projectiles, like fireball or arrow

most objects should move if on a conveyor belt
objs that shouldn't move: doors, walls, floor decals, pits, levers, flror spikes,
conveyor belts, enemy spawns, vendors, air born projectiles, particles








SOUND POLISH

the light fire sound effect should be louder
the reward sound effect is WAAAAY too loud

we should not be able to call the same soundFX multiple times from one frame
this causes the sfx to layer upon each other, drastically increasing their volume
this is BAD BAD BAD

we should have a quene of sfx to play next frame
then process that que each frame
so if a sfx instance is already on the que, it gets ignored
this way we can only play one kind of sfx instance per frame
on the next frame, sure, let the sfx play again
but this prevents the doubling up of sfx sounds on the same frame













Test deployment of Game on XBOX ONE

we'll need to match the UWP project to the DirectX project
we've added new classes to DirectX project.
we've added new content to the project as well.
i dont think anything has changed with how the backend class works, but check it

if loading xml room data fails, we'll need to store this data in .cs files
so we'll need to convert the XML data into .CS files




Write a RoomDataXML converter for UWP project (we can use for all projects too)

so we have all these great XML files
we load those files in and parse them to RoomXmlData objects.
we need to convert the XML data to .cs files.
these CS files can then be included into the project, 
then exported to output directory,
then loaded into the game at runtime.
and this is much faster than parsing XML each time game loads
and VS will check to make sure these CS files are syntax compliant

there should be files for: hub, key, boss, square, column, row
these are monolithic, code-generated files, with thousands of lines
simply "Add as link" these files into the project
then using a flag boolean, the backend will load them instead of the xml roomData



















RELEASE
record new GIFs
update the readme to reflect the directX port
"A 2D zelda clone, using Monogame 3.6, for XboxOne, Windows7, 8, & 10.
DirectX version uses .Net 4.5 & SharpDX.
UWP version uses .NetCore & SharpDX.
OpenGL port coming soon."

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
release version 0.6 with complete dungeon & enemy variety.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!















v0.7 goals


build more non-dungeon levels: towns, castle, forest, etc..
some should be non-combat
build colliseum level
build left town levels: A, B, C, + Church
build Old Town level
build castle gate level
build right town level
build tent town level
build cathedral level
build monument level
build center island home level

create dungeon variations: old ruins castle, cave, forest, big castle




make additional level types:

gate, castle, castle left, castle right, right town

colliseum, center town, forest dungeon, ship

left town 1, left town 2, left town 3, cave dungeon, left bottom church, left fort dungeon

tent town, cathedral connector, catherdral, 
bottom right water connector, center island, monument connector, monument










the exit rooms should be different for each dungeon type
but they should be the same for the dungeon type they represent
so the dungeon type feels consistent, but there is variety between dungeon types

create additional dungeon sprite sheets for the other 3 dungeons
don't worry about additional enemies or bosses tho, just use the blobs







we could also use the map scroll sprites as a display for letters
from the hero's wife or whatever
this could serve as a way to remind player of story too
player could read a scroll and get caught up on the main plot points
> wife leaves hero, hero'c cause/journey
> invitation to final tournament, with 4 boss head requirements

these scrolls could also popup when the hero gets them
displaying alot of dialog / story plot points




dungeons should have names.
the dungeon name should be displayed on the map screen's map.
dungeon names could be randomly generated from a list.




boss dialog + boss phaases

initially the boss should popup a dialog mocking player
after boss hits half health, another dialog should popup
this one talks about boss changing tactics
"you're better than i expected"
in the 2nd phase, the boss moves AWAY from the hero
so its harder for the hero to hit the boss
in first phase, the boss just randomly moves around





PITS++
falling into a pit is just instant death
hero just dies, no damage is dealt (no fairy can be used)
ends with 'you died' screen
hero is set into hit state and scaled down to 0
at 0, the hero dies

this should also happen to enemies (instant death, no loot drop)

we should prevent enemies from moving into pits / spikes on their own
they should be able to be pushed into them, however






instead of crystals, we should collect boss's heads.
this is the same icon that appears on the overworld map for the dungeon
this would appear in inventory screen where the crystals are, but there will only be 4

for now, implement 4 dungeons that all use the blob boss
these should be located on the overworld screen
change the overworld map to something more interesting
place the dungeon entrances in different locations

the 4 dungeon types: forest, desert, cave, mountain
the last dungeon type: cursed castle

upon collection of 4 boss heads, the final dungeon opens
the blob boss head is actually an eye, the bosses eye
for now, the player will collect 4 eyes

crystals widget should be renamed 'bosses defeated', bossesWidget

we'll need to update the game display data + the LSN screen to reflect the update away from crystals
we can also make the overworld map wider, to better fill the frame out













i'd like a LOC counter for the game classes folder

1kb = 1024 chars
game classes folder = 521kb
521 * 1024 = 533,504 characters in game classes




EnemySpawns and Enemy Types ++
a level of 1 means the easier enemy is placed here, and so on
we will have 5 levels of enemy in each dungeon
we will need 4 additional enemy types to fill out the enemy roster
create enemies that fire projectiles - arrows, fireballs, bombs





complete gameobjects

we'll need to be able to store the obj's direction
how often do we need to do this? prolly all the time...
well, actually not really - what objs use direction?

these objs 
conveyor belts - NSEW - this means there will be 4 objs saved/placed
spike blocks - EW, NS - this menas there will be 2 objs saved/placed
 
we should have an explosive barrel - of course!
just like bomb, but stationary, waiting for collision

Cracked Floor pit opening
we can also have a cracked open floor obj that sits over animated liquid
this varies the 'pit' style a bit

need horizontal bridges

Spikeblocks++
we should be able to create vertical and horizontal moving spike blocks
include an arrow over the spike block as indicator
write interaction routine for PitAnimated
this should work similar to conveyor belt, except it pulls hero towards it's center
if spikeblocks do not collide with the room rec, reverse their position
this prevents spikeblocks from flying out a door

create ice tile (no working for now) - changes friction

add pot throwable obj, just like skull obj

conveyor belts should move other game objects, like consumable items
or other objects, like bumpers and spike blocks	and explosive barrels

we should be able to turn the conveyors on and off
	this allows us to build rooms with additional complexity
	perhaps the switch turns the conveyors on/off?

	
	

	
	

Room Goals
doors should be set to trap doors
once hero collides with them, they close
this traps hero inside room

once all enemies are defeated or switch has been flipped, trap doors become open doors
this 'completes' the room and allows hero to exit

this means that rooms should have a goal enum
{ None, DeadEnemies, Switch, Torches }





DungeonDesign - Taking it Further
	design dungeons as a whole
	dungeons should have a theme
	there should be 'architectural puzzles', where the dungeon changes in some way
	this could be raising/lowering water levels
	moving forward/backwards in time
	destroying parts of the dungeon/rooms
	using switches to alter the paths thru rooms, or alter the nature of rooms
	for example, turning conveyo belts on/off, or spike traps
	
	in addition to these architectural puzzles, dungeons should also have a key item
	this key item must be collected to complete the dungeon
	for example, the hammer knocks down posts
	the hookshot pulls hero across gaps
	
	there are certain zelda puzzle tropes to be followed to:
	block puzzle - move a block or series of blocks into place, to press a switch / chest / etc
	enemy puzzle - kill all enemies / miniboss / boss
	shooting puzzle - shoot an eye or some object with an arrow / boomerang / projectile
	torch puzzle - light 3-4 torches
	
	
	
	
	
	
Create CheatsScreen - or this could be part of game ctrls

less instances on sfx list for text
more instnaces on sfx list for bomb explosions

"press any button to play again" should be "press any button to continue"

dungeon run text should blink, just like summary screen
should this be part of the animatedTitle's functions_class as well?
functions.Blink(Title), where title.blinkSpeed is used?














Story Design + Story Issues


(will we be using crystals?)
dungeon rewards++
When the hero beats a dungeon, the only reward should be the dungeon crystal, no gold.
gold is only acquired by defeating enemies (and later on, by betting on/winning tournaments)
text should read "press any button to continue"
remove 'reward' text

hero should be rewarded the dungeon crystal too
set into reward animation, with crystal over hero's head
this happens as the boss explodes, popup a dialog screen
explaining that hero has recieved a crystal
player exits the dialog, the screen fades to black

if hero already has this crystal, then skip the reward/dialog
boss explodes, screen fades to black







	
	




MOAR STUFFS TO DOs
	

options widget functionality	
	save game autosaves for now
	quit game exits all screens and loads title screen
	load game creates load screen
	
title widget functionality ++
	new game resets player data, autosaves, and creates overworld screen
	load game - calls the load game screen
	audio/input/video/game ctrls - does nothing for now

audio ctrls screen
	sfx volume
	music volume
	
input ctrls screen
	button mapping
	
video ctrls screen
	full screen or windowed?
	
game ctrls screen
	how camera moves - follow hero or center to current room? 
	we only need to flip Flags.CameraTracksHero boolean
	
	
Handling corrupt game files & first run setup - part 2

if a saved game file has correct XML headers, then game will load it
any fields that match to saveData's fields will then be loaded
theoretically, we could load an XML file that has no correct fields,
and the game would never know.. 
this makes it impossible to check if the loaded data is corrupt or accurate.
only XML with malformed opening header tags will fail to load.

we need a way to check that the loaded xml is actually a game file

create a saveData instance, set all it's fields to null
then load the saveFile into the null saveData
then check each field of the saveData to see if it's not null
if any field is null, then the loaded saveFile was corrupted
however, we can probably extract some data from the corrupt file 
so we could prompt the user with a dialog that asks 'load uncorrupted data?'
'the file i loaded is corrupt. should i try to recover it?'	
	
	

	
	
	
	
Polish

	implement the following items:
	item boomerang - just like LttP boomerang, hits an enemy for 1, can 'collect' pickups
	weapon staff - creates a magic orb projectile, if magic is max, else has an attack of 0, but pushes
	equipment pearl - wtf does this do in game?	
	
	we need an enemy that shoots arrows (new enemy type, not just blob with bow)
	we need an enemy that shoot fireballs (new enemy type, wizard?)	

	minor bug:
	the loadout animates the loadout menuItems
	when we select a laodout menuItem from inventory screen, we animate the loadout menuItem again
	this leads to a double scaling down effect, which shouldnt happen
	we shouldn't be able to select loadout menuItems.
	this solves the scaling issue, and it doesn't make sense to be able to select them
	selecting an item should only equip it

	polish hearts and magic world UI
	if the hearts change value, play the heart refill sound
	if the magic changes value, play the magic refill sound
	if hero uses magic, play the magic use sound
	
	Vendor stalls / layout ++
	we need vendor 'stalls'
	stalls should have rugs under them
	vendors should not be in a line, the should be spread out
	there should be more decorations in the shop
	the 'guide' npc obj should also be in the shop
	there should be a dog actor that chases the hero around
	this dog actor is an enemy, but never attacks and has it's own AI.
	
	what if we pushed the hero a little bit in the opposite direction of the fireball being cast?
	this would make it seem like the 'weight' of the fireball pushed him back	
	
	instead of an unknown menuItem, we should have a 'purchased' menuItem for items that have been bought	
	
	REPLACE BOSS MUSIC	
	re-mix the boss music, making drums much less prominent in the mix
	also, mix the drums down to mono in session - we're getting phase issues when we convert to mono later

	puzzle: conveyor belt that pushes the hero away from something
	solution: hit the switch, turn the belts off, so hero can move around
	we could even put them on a timer and play a timer tick sound, suspending the music
	
	Stats MenuItems? Or Help Menu?
	we need menuItem sprites for the various stats
	strength - increases amount of physical damage weapon does
	magic = increases amount of magical damage magic does
	agility = how quickly hero moves + dashes
	luck = increases amount of gold found + rewarded

	pull all the sound effects from links awakening

	we could add a spear projectile for blob enemies

Stuff that needs to be done, but it's not terribly important rn	
	
	we need a fairy projectile
	this projectile randomly moves around, slowly
	if the fairy collides with hero, it restores his health and magic
	later on, if the hero is attacking with a net, and the net hits the fairy
	we'll put the fairy in a bottle, if the fairy bottle is empty

	pickup and throw
	hero should be able to pickup the skull pot objects
	hero should be able to carry the skull pot objects around
	hero should be able to throw the pots in a direction
	pots should travel for a bit, with a shadow, before colliding with ground
	pots should also collide with room objects
	pot should have sound for pickup, throw, explode/death
	pots should randomly spawn loot too, when they are picked up
	
	dragging/pushing/pulling
	hero should be able to 'grab' objects
	if the object is draggable, then hero should be able to push and pull on it
	this 'grabbing' state should last until player releases the A button
	objects should inherit the movement of hero, and check collisions with all objs & actors
	if a draggable object would collide, it doesn't move
	
	we should include a soundFXinstance on actors that points to one of the soundFX in assets
	then we can set this instance in ActorFunctions.SetType()
	then later just call it generically, like Actor.AttackSound.Play().
	same with hit sound, death sound, use sound.
	
	implement additional weapons / items
	weapons : { staff, axe }
	items : { lightning, boomerang }
	
Maybes / Ideas	

	blobs should vomit a cloud, which acts as a close range projectile, with a short lifetime
	or they can use a weapon, like a stick or gooey hand, i dunno

	debugInfo displays the floor index, instead of the # of floor tiles used currently
	which isn't really a problem, cause we're going to optimize how floors are drawn later on

	OPTIMIZATION
	if we don't draw the floor tiles, the draw loop is much faster
	so, we could standardize the room sizes, then create a floor sprite
	then instead of drawing 200 floor sprites, we just draw 1 larger floor sprite	


	
Look at how stardew valley engages players
	theres so much to do and explore
	we need more to do and explore
	should be able to have a pet, like a dog
	should be able to speak with more people/npcs
	should be able to manage traders, adventurers, etc.. like assassins creed blackflag minigame
	should be able to craft advanced items, using special parts + gold
	just a ton of additional stuff layered on top of the dungeon running, that is supporting core gameplay
	
damascus appararel / 5060.bigcartel
- we could turn the style of the game into shirts + apparel too
- but the style would have to be futuristic and awesome	
	
	
	
