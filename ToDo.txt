
"As we enjoy great advantages from the inventions of others,
we should be glad for an opportunity to serve others by an invention of ours,
and this we should do freely and generously."
- Benjamin Franklin	
	
	
	
Roadmap

0.75 - mountain/cave levels + dungeon + enemies
0.76 - desert levels + dungeon + enemies
0.77 - castle, city, royal vendors
0.78 - king, fight with king, lightworld storyline done
0.79 - farming + seeds + crops
0.80 - dark world map + 1st level + transition to/from


Milestones

swamp/water dungeon + enemies
ice dungeon + enemies
graveyard dungeon + enemies
darkworld castle + enemies
darkworld queen battle
darkworld storyline

ganon battle + storyline





Today:



Throw & Push++

we can now pickup and throw all enemy roomObjs.
except seekerExploders, which could create a weird
state where link is holding a reference to a roomObj
that has released itself, so link would either A) get
hit by seeker explosion and try to throw(), or B) get
put into a state where he is holding a released obj, 
which wouldn't get drawn or interacted with. 

we can now push() all objects that are moveable
and grounded, since conceptually that makes sense.
and it's essentially what conveyor belts are doing.

i see some parallells between conveyor belts and
hero pushing objects, but i dont think a consolidation
is warranted, currently. in the future, when Wind is
implemented, we'll likely consolidate roomObj pushing
to a single method, and check the push against a weight
integer to determine if the push should occur.
link would have a weight greater than the obj always,
so he could always push push-able objects. BUT wind
would have a weight of 0 or 1, very light, and would
only physically move objects lighter than it (not building
walls for example). however, later on - we could implement
storm magic that creates tornados or strong gusts of
wind, and we'd only need to increase the weight of the
wind to insure it pushed everything on screen, including
the hero. this weight vs weight check is very useful -
it can also determine how quickly the hero pushes an
object making it seem like larger or heavier objects
take longer to push. /rantOver.

double checked obj definitions to ensure proper
push interaction is implemented.

fixed sorting issue with buildings side walls 
sorting on same layer as front walls. now they
sort over front walls, completing the required
black border of pixels around every roomObj.








Map++
Make the map a roomObj.
link colliding with it should set reward state, pop map reward
particle, flip map boolean. miniboss should spawn map pickup obj,
if miniboss dies in hub room, and hero doesn't have map.

*map sprite should bounce and be SUPER noticeable.
the player should have to choose NOT to pick it up.

MapScreen++
add lttp's map title to dungeon map screen, outside of
the scroll sprite. rename map window title to nothing.



Reading Signs
we need to be able to read signposts properly
this is based on the current room/level.
only 1 signpost is allowed per room, extending to fields.
so, for overworld levels, there can only be 1 signpost.
and it can only say one thing, because it's based
on the room.id. and this will be contained within
a method called ReadSign(GameObject SignPost).











------ RELEASE 0.74 --------

create the gameplay page in the repo, and start
filling it with examples of gameplay gifs (with text notes):

moving & dashing
attacking, using items, inventory
colliseum fighting
grass fires + burning objects
swimming, swim dashing 
pickup, throw, dash carry
sneaking, swimming underwater
buildings, roofs, destruction
Vendors + NPCs
minibosses + bosses
dungeon type, size, variety
environments + levels

record a gif showing off colliseum fights for 0.74.
delete versions page entirely.






EDITOR +++++++++

editor++
it would be nice to be able to toggle roofs on/off.
and hide their collisionrecs too, so we can't accidentally pick them up.
it would also be nice to "lock" water tiles somehow, so we can't
mess them up. maybe different selection modes: landscape, building.
it would be nice to be able to drag select a rec around a set of objects,
then move them with the arrow keys, in 16 pixel increments. this would allow
us to edit parts of rooms just like we edit pixels in photoshop.





Magic Mirror
- returns link to dungeon entrance.
- plays warp sound fx
should call Level.BuildLevel(Level.ID),
which will cause the level to fade in from black,
and place hero at the entrance the dungeon again.
*this should only work in a dungeon. 
*magic mirror doesn't warp hero out of dark world
back to light world like lttp did. 
instead, magic mirror "reflects link's true image,
keeping him human in the dark world".

Whe link is first pulled into the dark world,
his magic mirror should get cracked, so he becomes
the familiar bunny again. this time he has to seek 
out someone who can repair his magic mirror before
he can become himself again. during this time,
bunny link can only walk, dash, interact, pickup,
throw, hide/sneak, swim, dive, and swim dash.
no attacking or using items. the idea is to 
make this part of the game a stealth mission:
sneak past the overpowering enemies as a bunny,
repair your magic mirror, and THEN fight.






