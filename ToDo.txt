
"As we enjoy great advantages from the inventions of others,
we should be glad for an opportunity to serve others by an invention of ours,
and this we should do freely and generously."
- Benjamin Franklin	
	
	
	
Roadmap

0.75 - mountain/cave levels + dungeon + enemies
0.76 - desert levels + dungeon + enemies (bottom left castle)
0.77 - castle, city, royal vendors
0.78 - king, fight with king, lightworld storyline done
0.79 - farming + seeds + crops


*map redesign to look like hyrule*
*island overworld map becomes ice-island*
*this leads into darkworld map design too*
0.80 - dark world map + 1st level + transition to/from


0.81 - swamp/water dungeon + enemies
0.82 - ice dungeon + enemies <<< this is larger ice-island map, via darkworld boat
0.83 - graveyard dungeon + enemies

0.84 - darkworld castle + enemies
0.85 - darkworld queen battle
0.86 - darkworld storyline
0.87 - ganon battle + storyline





Today:




Climbing - Part 3

created idle and move climbing animations for
heros, using existing sprite sheet.

updated climbing routine in actor.update to
manually set the animation frames for the actor,
then bail from the method. then i linked the
idle and move climbing animations to the input
component's direction. if the direction isn't
none (the player is pressing the joystick in a
direction), then the actor's animation is set
to the climbing moving animation. this was easier
and faster than doing a math.abs check to see
if the actor's move component's magnitude was
greater than 0 (actor was moving), which was the
original solution to determine how what animation
frame to display. whew.

playtested, it actually looks like link is
climbing the wall.

improved heros hand placement to prevent 
twinning while pushing and climbing.

improved routine that handles climbing animation,
now the routine stops in the middle of the moving
animation, then waits 255 frames before advancing
to the next animation frame. when moving, the
animation speed returns to normal and the moving
animation plays as expected. this adds the bonus
of giving the hero a very slow idle climbing
animation, like they were adjusting their grip
while waiting. overall, climbing looks very good.
removed idle climbing animation, as the system
only needs the moving climbing animation now.

built the first version of the mountain,
with two climbable areas, one over water.








Climbing - Part 4

*when hero falls into water, he should just splash and goto idle.
we'll need to branch check here.

*need climbing sfx - chest open sfx?

*pressing A while falling should grab onto nearest foothold.
if actor is falling, they should be able to 
grab a foothold by pressing a button. pressing
a button again afterwards doesn't cancel the
climbing state. so it's ok to spam A while falling
in the hopes of grabbing on. this allows for
assassin's creed style climbing up high to fall
to catch a foothold in an unreachable area,
all based on skill and understanding of the game.



































link up the mountain level to the overworld screen.
add the mountain dungeon's entrance obj.
change the mountain dungeon's wall sprites to be
cave-y. 






update forest standard enemy to be angry floating eye.
- doesn't need swimming state, has same rec as hero,
so he can cast fireballs, etc...


create blob dungeon pit object - this will go on town level.
if hero collides with this obj, he falls into the blob dungeon.
this dungeon builds a critical path to the exit, which
dumps hero back out at last overworld location (or just town level).
-this moves blobs into their own dungeon, without a miniboss or boss.



mountain dungeon++
add mountain enemies, miniboss, boss.
standard enemy is? snake?





























Town++
we are going to rebuild the town level completely..
completely! with a few goals in mind: smaller houses
that are father apart. all roofs fade out when link
enters a house, so we don't want multiple houses on
screen at once. only one. we'll also be creating the
My Chickens! sidequest soon, so create a gated area
for chickens.





*exiting the forest dungeon placed link at colliseum.
it's likely we're not checking to see if link is exiting
a level of id.type dungeon.








Mountain Level
should be able to climb up certain rock walls, denoted with small
footholds. hold A to climb. rockwalls normally push link down (faking
gravity), but while in climbing state the push is ignored. this allows
link to literally climb up the mountain. he can't use any items while,
climbing so link has to dodge enemies until he can get to a landing to
take care of them.

the 1st field level is the basecamp and start of the mountain.
the 2nd field level is the major climbing level, and contains the
entrance to the mountain dungeon.
the 3rd field level is the summit, and contains summit related things. ???
the mountain dungeon entrance is NOT on the summit, because
it would be difficult and time consuming to climb all the way back
up when player has died in the dungeon. at the summit we could
have an overlook - which creates a screen with nice concept art and music.
like the player was looking at hyrule from atop a mountain.







Screens + ScreenManager
migrate screens to be GLOBAL. they will still inherit
from base class of screen, but this way we get to keep
the last selected menuItem, etc... 







*not this, but...*
At the begining of the game, build a complete dungeon in the
background. this causes the game to do all the JIT compilation
at the start, so we don't get an initial hiccup when loading into the
first dungeon. *hopefully* because this only happens on uwp
on xbox one, so i'm assuming the code is compiled differently.

title screen is the menu with input over a level screen
played by an AI. this AI doesn't have to be good. it just
has to move around and attack and explore stuff - and it can't
die. after a period of time, randomly load a different level
or dungeon. should start inside a dungeon.






