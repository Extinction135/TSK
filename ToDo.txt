

todo:




	


	
	
	
consolidate ALL components into components.cs	

component animation needs to be fixed - shouldnt have a reference to spriteComp at all
	instead we'll create a global class that handles the animation of these components
	
component input + input helper can be condensed
we'll need an InputFunctions class

create sprite functions to hold centerOrigin(), setZdepth, updateCellsize() functions






move the test room down 16 pixels, so the actors dont disappear when they reach the top

define room.cs, which describes the width and height of a room, and has a .type enum
	create a room instance, then pass that to the room creator routine
	place enemies all around within the room, they should not overlap
	place hero in the center of the room





	
	
add editor buttons to top of window: draw collisions on/off








dungeon.cs
	a collection of rooms (including an exit, hub, key, + boss room)
	draws the current room
	
room.cs
	rectangle (collisionRec) : size + position
	type
	


	






load in a background sound file (to determine how much space this will take up)
this file should be loaded into the SCREEN's content manager
a screen's content manager should be unloaded when the screen exits
this allows us to load different music for different screens, without touching assets.cs

this sound file should be a set number of bars long, at the standard length
this should be mono, as compressed down as you can
can we use mp3? that would be ideal
does an mp3 get uncompressed when loaded into game? 

re-export sound files aligned to specific bar requirements
this will require some rewriting / restructuring of melodies and chords








sound manager should be handled just like screen manager
part of game, passed as ref to each screen
so a screen can just say "soundManager.whatever()"

