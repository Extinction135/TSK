
"As we enjoy great advantages from the inventions of others,
we should be glad for an opportunity to serve others by an invention of ours,
and this we should do freely and generously."
- Benjamin Franklin	
	

Roadmap

0.76 - swamp level + dungeon + enemies + boat level
0.77 - castle, city, royal vendors
0.78 - king, fight with king, lightworld storyline
0.79 - intro, farming + seeds + crops

0.80 - dark world map + 1st level + transition to/from
0.81 - volcano levels + dungeon + enemies
0.82 - ice levels + dungeon + enemies
0.83 - graveyard levels + dungeon + enemies

0.84 - darkworld castle level/dungeon + enemies
0.85 - darkworld queen battle
0.86 - darkworld storyline
0.87 - ganon battle + storyline

0.88 - secrets
0.89 - sidequests, extra
0.90 - COLOR!!! (keep grayscale as texture option)

0.91 - playthrough videos
0.92 - development videos
0.93 - intro to codebase / systems design
0.94 - overall design & direction of TSK
0.95 - thoughts on zelda franchise

???

1.0 - official release



Today:











coastline sprites!
setup north exit of boat level to look like island.




Ship level on Island

we need to complete this level:
ship is docked at a pier, with bridge.
north in level is coastline, with animated water
fx for waves hitting coast. these are implemented
ontop of the existing water tiles, so we don't modify
the swimming system already in place.








Boat Bridge Objs

the bridge connects to the boat via the staircase.
link shouldn't be able to jump off this bridge.
link can't swim under it either. bridge hitboxes
should match stairs, so no hangups happen while
dashing around the stairs corner onto the bridge.

how is this done? using two bridge objects.
boat bridge top is the wooden top part, with a
hitbox keeping link from moving north.
boat bridge bottom is the legs in the water
part, with a hitbox keeping link from moving
south. together these two objects occupy the same
space as a water tile (2x2). so they fit into 
the existing water tile design.

added boat bridge objects to the boat island level.











Pier Objs
this is standard 3x3 grid of sprites,
which we can reduce to 2x3 grid, with flips.

*would be nice to have animated water on corners
of pier.















Boat Flag
create ship flag animation sprites.
remove the jolly roger from it.
we'll use this as an overlay later on if needed.
add ship flag. it should animate and bring life
to the level.























Boss And Hub Room Upgrade

*we need a watery hub room for swamp mini
*we need a watery boss room for swamp boss
*we need small tiles that the hero can stand on, above water (water lillies!)

*we need swamp dungeon to specifically load these mini & boss rooms.
**in fact, it would be good to have dungeons specifically load the hub
and boss rooms, so we dont have insane boss battles on ice.

we need to 'texture id' each room to a dungeon type using an enum, in xml data.
then loop over the hub rooms, looking for forest id enum, then build it.
we could even collect a list of hub rooms with forest id enum,
and randomly choose one, allowing for variation. we could even
place forest specific objects in these rooms, because we know they
will always be built in the forest sheet (so we dont have two level
sheets on screen at once).

this could be the way to set the level's texture as well.
if the room has a dungeon type enum, then we know what texture that
room requires to be displayed correctly. when we load the room,
we could simply set the texture based on the room's texture enum.

*this removes the need for SetTexture() to exist, as we load/set
the texture based on the texture enum found in xml data, instead.

some rooms would have the texture enum id of any, corresponding to
any of the texture sheets. in this case, we would base the texture
off of the level id.

create 3 cotomouths in hub room for swamp.
create 2 armored spiders in hub room for mountain.


swamp dungeon should be diff than mountain dungeon
in size and complexity. because it takes longer to
move in water, it will feel like the dungeon is harder
on a base level, so the dungeon shouldnt be that large
or complex. we're also going to be adding a water lever
critical path into this dungeon, so it needs to remain
about the size of the forest dungeon. the boss room
should connect to the hub room as well.









*this also sets up the possibility of water colliseum battles.
*judge should be sitting on a lilly pad.
*we'd just need to flood the colliseum with water tiles, then
place lilly pads / rafts / bridges / etc in specific areas.









forest level redesign -
a horizontal set of trees block the dungeon entrance.
the entrance is surrounded by indestructible objs.
player HAS TO BURN down the trees to get access to dungeon.
this teaches player objs can be destroyed.
bonus: grass under the trees should act as a fuse for a
massive forest fire across the whole level. kinda like it
does now, but better.






Mountain Sprites
add black pixels to the corners of the mountain wall sprites.
this will make the rooms appear rounded, which further visually
separates them. 




Colliseum Entrance Obj++
the colliseum entrance obj should just be a wide black entrance,
like the center sprite. we dupe that for a total of 3, so we have
a massive entrance. then put those skull pillars on the side. why?
to match the entrance/exit sizes between the colliseum levels.
the exit from the interior is pretty wide, so the entrance
should be wide as well.









Polish + Fixes

explosions should push roomObjects that they touch.
that are moveable. that dont get destroyed?
are explosions pushing objects?


rats and crabs should "bite", but turtles dont.
all types can be picked up and carried, but rats
and crabs will eventually bite link, causing link
to throw the creature and take 1 damage.


it would be nice to show the currently selected objects
important parameters, like moveable, grounded, etc..
we could put this info next to the object in the objTools
widget, if we extende the widget.


footholds were pushed off the mountain wall.
i assume a frame of interaction happened prior to
the roomObj types being updated. 
*when we reset the pool, stopMovement() on all objs.







Actor Refs

a projectile's caster should be an actor reference.
if a projectile's caster is null, then it should have no behavior.
this is because some gameobjects cast projectiles,
but in that case the projectile wouldn't have any behavior
related to the caster.

this simplifies the current system for handling projectiles,
which uses the moveComponent. using this moveComp, projectile.update
attempts to prevent projectiles from ovrelapping with their casters,
but this is based on the compMove and not the hitBox, which is
actually the target of importance. we need to have access to
the entire actor object, not just it's compMove! we need to
touch the actor's hitBox from projectile.update, and we can't currently.
once we do this, we can check and align projectiles to the actor's
hitBox, and then larger enemies can have larger hitboxes while also
being able to cast projectiles...
plus, projectiles could properly implement their behaviors - by
tracking the actor's hitbox instead of their newPosition..







Release version 0.76
test install on windows10 via Dx.
test install/run on xbox one via UWP.
print media for 0.76 (main gif, playthru video).
update readme with links.




