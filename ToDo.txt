
"As we enjoy great advantages from the inventions of others,
we should be glad for an opportunity to serve others by an invention of ours,
and this we should do freely and generously."
- Benjamin Franklin	
	
	
	
Roadmap

0.75 - mountain/cave levels + dungeon + enemies
0.76 - desert levels + dungeon + enemies (bottom left castle)
0.77 - castle, city, royal vendors
0.78 - king, fight with king, lightworld storyline done
0.79 - farming + seeds + crops


*map redesign to look like hyrule*
*island overworld map becomes ice-island*
*this leads into darkworld map design too*
0.80 - dark world map + 1st level + transition to/from


0.81 - swamp/water dungeon + enemies
0.82 - ice dungeon + enemies <<< this is larger ice-island map, via darkworld boat
0.83 - graveyard dungeon + enemies

0.84 - darkworld castle + enemies
0.85 - darkworld queen battle
0.86 - darkworld storyline
0.87 - ganon battle + storyline

0.9 - COLOR!!! (keep grayscale as texture option)
0.9+ - supporting media

1.0 - official release










Today:




Dungeons++

improved fun_dungeon.buildDungeon_AddBossPath().
added ability to create a number of rooms
between the last room and boss room. these
rooms are created north of the last room,
vertically expanding the dungeon away from
the exit room. 

tested mountain + forest dungeons. <<< good.

Visual Aids
created folder repo/DungeonExamples, to
contain visual examples of what dungeon
layouts look like. this is to show people
how the layout changes between dungeons.
added forest and mountain dungeon maps
pulled from 1st run examples.










*improve mountain dungeon wall sprites
- the transition to the floor is too dark
plus, there is a light part that directly
touches floor and looks wrong.
the top right lighter part also looks wrong,
but the 'shine' on the rock face looks good.
keep and expand it. shiny wet rocks looks good 
and different.



*if a tree is burning, we can't destroy it
*because we only check for trees, and not burning trees too..




Refactoring

functions_level.buildPosition should be level.buildPosition.
same with fun_level.dungeonTrack... lol

level.id.Forest_Dungeon = id.Dungeon_Forest.
id.Forest_Entrance = id.Entrance_Forest.
fix these naming conventions.






Mountain Dungeon

mountain dungeon enemies:
standard: dark spider (from rescueDog)
boss: big bat (dash moves, dives, spawns bat mobs)
miniboss: med bat (dash moves, dives)
mob: sm flying bat (seeks and bite-pushes hero)


forest dungeon enemies:
standard: 
	floating angry eye - flying, sm hitbox
	*need more frames for angry eye (hit, cast)
	shocktopus - flying, sm hitbox
boss: big eye
miniboss: blackeye
mob: seekerExploder

EnemySpawns++
for each dungeon, enemy spawn 1 simply creates
that dungeon's standard enemy at that location.
if there is more than one standard enemy for
that dungeon, then randomly choose one.
*note: most standard enemies are flying, so
they dont have to deal with swim states. so
far, only the blob standard enemy fully
implements all hero states...


add room enemies to object widgets, based on 
what level they 'belong' to.














Separate Blob and Forest Dungeons

* the blob dungeon uses the town sheet *

create blob dungeon pit object - this will go on town level.
if hero collides with this obj, he falls into the blob dungeon.
this dungeon builds a critical path to the exit, which
dumps hero back out at last overworld location (or just town level).
-this moves blobs into their own dungeon, without a miniboss or boss.


Town++
we are going to rebuild the town level completely..
completely! with a few goals in mind: smaller houses
that are father apart. all roofs fade out when link
enters a house, so we don't want multiple houses on
screen at once. only one. we'll also be creating the
My Chickens! sidequest soon, so create a gated area
for chickens.

we also want to have an entrance to the blob dungeon
from the town level. we can also move some npcs from 
the town level to the farm level, as it seems very
lonely there as is.







TITLE SCREEN + TEST AI
*not this, but...*
At the begining of the game, build a complete dungeon in the
background. this causes the game to do all the JIT compilation
at the start, so we don't get an initial hiccup when loading into the
first dungeon. *hopefully* because this only happens on uwp
on xbox one, so i'm assuming the code is compiled differently.

title screen is the menu with input over a level screen
played by an AI. this AI doesn't have to be good. it just
has to move around and attack and explore stuff - and it can't
die. after a period of time, randomly load a different level
or dungeon. should start inside a dungeon.





Colliseum +++
extend colliseum with additional challenges.
add more miniboss + boss challenges.
add more standard enemy challenges.
add *colliseum unique* creature challenges.

add *king's tournament challenge*
- this is ladder fight of bosses
- we have tons of bosses to put here, from master/forest/dev






add to forest dungeon:
eye statue - doesn't attack, can be picked up like turtle. 
doesnt move. hand placed.

floating sm eye - randomly floats around, explodes if near hero,
hand placed.





release 0.75... 




