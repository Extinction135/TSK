
"As we enjoy great advantages from the inventions of others,
we should be glad for an opportunity to serve others by an invention of ours,
and this we should do freely and generously."
- Benjamin Franklin	
	
	
	
Roadmap

0.75 - mountain/cave levels + dungeon + enemies
0.76 - desert levels + dungeon + enemies (bottom left castle)
0.77 - castle, city, royal vendors
0.78 - king, fight with king, lightworld storyline done
0.79 - farming + seeds + crops


*map redesign to look like hyrule*
*island overworld map becomes ice-island*
*this leads into darkworld map design too*
0.80 - dark world map + 1st level + transition to/from


0.81 - swamp/water dungeon + enemies
0.82 - ice dungeon + enemies <<< this is larger ice-island map, via darkworld boat
0.83 - graveyard dungeon + enemies

0.84 - darkworld castle + enemies
0.85 - darkworld queen battle
0.86 - darkworld storyline
0.87 - ganon battle + storyline





Today:




Textures, Objects, Enemies, Vendors, NPCs & Editor++

created town sheet.
updated forest, colliseum, and mountain sheets.
renamed all sheets, updated both content projects.
updated sprite assets with proper file addresses.
added mountain and town sheet instances to assets.

updated rat, turtle, crab to be global enemies,
meaning their sprites exist on every sheet now.
this allows them to exist on any level, and have
that level's color scheme (eventually).

updated npc and vendor objects to use townsheet.
updated bed to inherit level texture, as it's a 
global obj now (every sheet has a bed).

updated tables, bookcase, shelf, stove, sink,
and chair to use townsheet. updated gates, 
buildings, and roofs to use townsheet.

updated Fun_Texture to handle new sheets and
level texture associations.

renamed and rearranged editorMenu widget objects.
updated editor menu to handle town, forest,
and colliseum widget objects.
updated editorMenu to pass input to, update,
and draw the dev widget object.


















Mountain Walls

add mountain widget object, update editor
to handle mountain widget object. add mountain
objects to game + mountain widget. these objects
are the mountain wall object and the foothold
object. we should make the mountain wall object
very large, and the foot hold objects should be 16x16.
this way we get an optimization in roomObjs (mountain walls)
because they will be taking up the most space visually.


























**we have nothing for the 'entrance' obj for the
town sheet. this could be the big weather vane
with the duck from kakariko village, but that's
just decorative 'throwback' and isn't really useful..



clear town level - we are going to rebuild it 
completely, with a few goals in mind: smaller houses
that are father apart. all roofs fade out when link
enters a house, so we don't want multiple houses on
screen at once. only one. we'll also be creating the
My Chickens! sidequest soon, so create a gated area
for chickens.

create town sheet. 
update game so town level loads town sheet.
move gates and building objects out from shared
area and into unique section, just for town.
update their animFrames!





*exiting the forest dungeon placed link at colliseum.
it's likely we're not checking to see if link is exiting
a level of id.type dungeon.








Mountain Level
should be able to climb up certain rock walls, denoted with small
footholds. hold A to climb. rockwalls normally push link down (faking
gravity), but while in climbing state the push is ignored. this allows
link to literally climb up the mountain. he can't use any items while,
climbing so link has to dodge enemies until he can get to a landing to
take care of them.

the 1st field level is the basecamp and start of the mountain.
the 2nd field level is the major climbing level, and contains the
entrance to the mountain dungeon.
the 3rd field level is the summit, and contains summit related things. ???
the mountain dungeon entrance is NOT on the summit, because
it would be difficult and time consuming to climb all the way back
up when player has died in the dungeon. at the summit we could
have an overlook - which creates a screen with nice concept art and music.
like the player was looking at hyrule from atop a mountain.







Screens + ScreenManager
migrate screens to be GLOBAL. they will still inherit
from base class of screen, but this way we get to keep
the last selected menuItem, etc... 







*not this, but...*
At the begining of the game, build a complete dungeon in the
background. this causes the game to do all the JIT compilation
at the start, so we don't get an initial hiccup when loading into the
first dungeon. *hopefully* because this only happens on uwp
on xbox one, so i'm assuming the code is compiled differently.

title screen is the menu with input over a level screen
played by an AI. this AI doesn't have to be good. it just
has to move around and attack and explore stuff - and it can't
die. after a period of time, randomly load a different level
or dungeon. should start inside a dungeon.






