
"As we enjoy great advantages from the inventions of others,
we should be glad for an opportunity to serve others by an invention of ours,
and this we should do freely and generously."
- Benjamin Franklin	


VisualStudio Shortcuts
F12 + selected word = goto definition
CTRL + M, +O = opens, closes regions


The Big 4:
"Give the player meaningful choices to make."
"Remind the player of their choices."
"Recognize and respond to what the player does."
"The Gameworld is a character that reacts to the player."




Roadmap

0.77 - Overworld added, temp levels setup, COLOR.
0.78 - ShadowKing coliseum, town, blocked shadow dungeon entrance
0.79 - Forest Islands
0.80 - Lava Islands
0.81 - Cloud Islands
0.82 - Swamp Islands
0.83 - Death Mountain Islands
0.84 - Thieve's Hideout
0.85 - Shadow Dungeon, Shadow King fight

0.86+ - ???


Video To Make -
playthrough videos
development videos
intro to codebase / systems design
overall design & direction of TSK
thoughts on zelda franchise
seperating collisions + interactions














Today:





Prep for 0.77 Release




Input Bugs - Part 2

all screen input is working, but we aren't mapping gameInput
to the player, so there is no player input at all. fixed.
tested, working as expected. keyboard input fully implemented.
now we need to polish the input, because there are some side effects..









Input Polish

due to the input update, players can now simply hold down X to
spam attacks, hold down Y to spam use items, and hold down A to
put themselves into a perpetual INTERACT state, where link is bending
over. so, we'll go back to forcing new button presses for all these
actions, simply because that's not how I want input to feel.








Player2 Input

*we are not modeling player2 input at all right now.
*we need to do this.





Finish Coliseum Level





















Allow Player 2 to Control the Doggo

if hero has a pet, and controller 2 exists, then
pass this input to the pet. any button makes the dog
bark. b makes the dog dash. d pad sets direction.

the dog's bark pushes enemies or objects, so player2
can actually be useful. pet update: should only be able
to purchase a pet if player two presses A on the controller
during the vendor screen. this is because they will be
controlling the dog the entire game. no more dog AI.
if there is no controller 2, no pet.
if there is no controller 2 input, no movement.
pet cannot die, isn't actor, is roomObj with primitive inputs.














release 0.77? YEPPPpp



//right shift for back button? do we use select in nes controller?
if (IsNewKeyPress(Keys.RightShift)) { }





Record playthrough
Upload to youtube, cut gifs
Edit 0.77 gif together

-post gif to gbatemp thread
-post playthrough video to: insta, discord
-post gif to insta - can we do this without compression? via usb transfer?












Tweens




unarmored spiders++
they need to retreat in a random direction for 4 seconds,
away from hero, plus a random push sometimes. this makes their
next attack path more varied, and more difficult to spam the
forward attack strategy with them. also, there should be more
armored spiders, and there should be smaller spiders that
jump attack, from rescue dog.






Big Chests

big chests should exist in dungeons, and reward the master key.
this allows smaller chests to exist outside of keyroom and dungeons
altogether. also, we could randomly reward player with loot when
they open the chest, including magic or fairys or whatever.









notes:
torches should be common objs, as they exist outside
of dungeons. same with map, key, flamethrower, ice tile,
fairy, explosive barrel, pit, pit bridge, conveyor belt,
enemy spawns, and finally pit spikes on/off.

this may make the dungeon sheet sizeable down a power.
YES WE CAN! and up next, the dungeon sheets will drop to
128x128 sheets, reducing the ram footprint of the game.
which is good, if you are planning on porting to ram
restricted systems... 




Coliseum++

we need 'windows' that look into the coliseum,
like the overworld sprite depicts. plus, I don't like
how the coliseum level is unbalanced and to the right.
instead, the coliseum - and all subsequent coliseums -
will be entrance centered to level, north of spawn.
this 'presents' the level much better, because coliseums
have no required puzzle for entry.

a window is a 3x4 obj, with baked in bkg.
so this saves us a lot of roomObjs.




Doggo++

color pet doggo.
make doggo not shrink when in pits.
make doggo not fall into pits.
make doggo stick real close to hero.
doggo can never get too far away now.
doggo always spawns with hero in room.





House Roofs++

add detail to roof sprites: we can have roof
sides and corners, to better show where the roof
ends. like rain gutters and trim and stuff.
houses can look much better.




Water++

*we could have animated floating lily pads, much like the animated
flowers that sit over the grass levels. this would add some decoration
to the otherwise bland sea water.




*need to make boat anchor object - this is already in common objs,
and can be used to further decorate piers.










Overworld++

Water Coliseum Path

water coliseum path (forest) (6)
645.575 -> up neigh = lavaisland main path 4
612.589
571.585
536.609
565.644
530.671

temple 1 path (2)
514.591
480.581

water coliseum level (connected to path above)
499.706




lava ship 1 path (2)
567.455 -> down neigh = lava island main path 8
572.406


lava cave 1 path (3)
508.538 -> up/r neigh = lavaisland main path 7
458.545
420.522

volcano coliseum path (6) (left to right)
150.522 -> up neigh = lave island main path 15
113.530
99.553
138.562
180.562
217.571 -> right neighbor = forest main path 27





plateau island main path (12)

plateau island misc paths (2)

plateau ship path (2)
299.629
255.616

lava sub path (7)

lava ship 2 path (1)

lava cave 2 path (2)

lava cave 3 path (2)

lava to cloud connection (5)





DEATH MOUNTAIN LOCATIONS+++







Dungeons++

when player defeats the boss of dungeon, the skull
on the overworld needs to collapse. just the top part
though - and it should smoke as if it's been changed.
this is to visually signify that the dungeon has been
beaten - ala SMB.













> no chickens? no chicken sounds unless obj hit. then cluck. add chicken to town.






art++
remove orange/red from coliseum spectators
make spectators much more brown and less obvious



editor++
signpost shold be part of env objs widget (is part of dungeon widget)




As a reward for releasing 0.77, will now implement The
Magical Axe, and The Hookshot (at the same time).



The Axe

I'm straight ripping Kratos' axe here. This is an obj
much like the boomerang - thrown by Link. once it reaches
max distance, it falls to the ground. this isn't far.
pressing Y aggain then returns the axe to link's hand,
at maximum magnitude, through anykind of object or enemy.

- notes - 
if this projectile is moving, then it has interaction checks
with actors and roomObjects. if it is not moving, then the
axe is laying on the ground and is ignored.

*axe in hand, axe in air, and axe on ground sprites all added.

the axe must become MAGICAL before it will return to link.
so we have two axes: axe and magical axe. two different behaviors,
but one item, essentially. the axe just dupes sword behavior,
but when upgraded to magical status it becomes kratos' axe.
*axe should collide and collect pickups for link upon returning,
and throwing (while moving, basically). so, lining up the perfect
group of mobs and pulling an axe thru them also rewards the 
player with some of loot instantly. no elemental aspect to this
weapon please - no fire or ice or poison affects. this is a 
simple throw, wait, call item with specific destructive power
that keeps it in check.

+ added updated entities sheet to the game.

Design Parameters for Projectile Interaction with Actors

* the axe should stick into enemies.
* arrows should stick into enemies.
* at the same time, the hookshot should
pull whatever actor it is attached to (meaning
some enemies could pull themselves across gaps,
just like link does).

we have to design how projectiles stick to actors.
initial design is to put a projectile reference into
actor class. once stuck to the actor, the projectile
would live for 255 frames (life counter reset to 0, behavior
suppressed, only decoration), and then be released(), or in
the case of the axe, it would stick around until the caster
returned it, resetting it's lifecounter to 0 every 100
frames - living forever - unless the projectile pool is reset.
which is a safe way to add this idea into the current systems.

we should be modeling boomerang in actor class, along with
the magical axe. this allows enemies to use these items
using the same systems as the hero.

How Does this Affect Hookshot Design?

Hookshot Design: for each actor, there are projectile references.
if something is 'stuck' into the actor - like an arrow or axe.
hookshot can stick into an actor too, pulling that actor towards
the caster while dealing them 1 damage. but also, if hookshot
hits a blocking object, then hookshot drags the caster towards
it's location for 4 seconds, after a pretty swift speed. after
255 frames, the magnetic pull no longer happens. 

then we need only to decorate the line between caster and
hookshot tip. we need two sprites: hookshot tip and chain,
which is animated in lttp, so we'll do that too. we'll use
more sprites however, to make the chain seem more connected.
and i think we should use actual links of chain, not the spike
stuff, and the chains should connect visually, so they need to
be center connected. the tip connects centered too. if done this way,
we dont need an animation. we could spawn a random sparkle particle
on a chain if we wanted to, to draw attention to it.

important - we need to be updating how many chains the hookshot
has each frame! we cant just use 4 or 8 and 'deal with it'. calculate
the distance between the tip and caster each frame, then place
chain particles along the line between caster and hookshot tip,
in 16 pixel increments vertically or horizontally. we'll disable
casting hookshot diagonally, and we'll extend the actor's stateLocked
state to prevent them from moving until the hookshot completes it's 
travel...ugh... too complicated.

lets just draw a line between the hookshot tip and the caster,
as a black rectangle. we need to add this code into the codebase
anyway. then we can reuse it for the overworld, draw lines between
neighbors. ok, designs ready.

*the axe should draw a straight line from it's pickup point to caster,
upon it's returning state.




















0.78 - SLIME, Swamp Dungeon

-because we're close to finishing the swamp dungeon,
we can use it as a prototype endgame dungeon (hard difficulty).

*create swamp dungeon entrance objs + level details - SLIME obj

we can do the slime obj rn - this just drops player mobility to 
pushing/dragging speed upon contact. super easy. then update the
swamp level, so swimming thru slime is annoyingly slow.








Slime and Lava Dungeons, Objs, Enemy Sets

*create lava dungeon entrance objs + level details - LAVA conveyor belt objs



shadow: from water + ship, into animated shadows (hard) - all black obj 




Overworld ++

locations should have a camera offset. so, when link lands on
a boss location, the camera centers on the skull, instead of link.
we can also do this with special locations, such as the cloud castle:
the camera should focus on the castles, panning the right.
this shifts the focus off of link and onto a specific obj in overworld,
drawing players attention to it - saying 'hey this is important'.

locations should be named on the map - this will help knowing each
location and how they are connected, and will aid in development.
however, this should be a static ui element overlay, that changes when
links lands on a location. thus, locations need string names to query.

a dungeon is composed of rooms, a field is a large room. we can
chain fields together using objects, similar to how we make dungeons.
this allows for a series of fields leading up to a dungeon or target.r



Overworld+++

if these lines are calculated each frame, and only for the current locations
on screen, then the locations can move around and be animated while
still properly being connected. link should track to his landed location
each frame as well, in case it moves around. we can even have location connect
dynamically, if they are close enough together. this would create a window
of opportunity for the player to move to this isloted location, which could
be useful or interesting in some way later.






Level 0 - masked tutorial level

initial level : at sea, boat is attacked, link uses his sword
to defend brandy from attackers. the ship cannot be left (stairs up).
once the attack is over, brandy converts to mission complete obj.
talking with brandy then ends the intro level and takes us to skull
island overworld location.

skull island - final boss, coliseum, vendors

link talks to the shadow king, who confirms that he holds brandys
love in his prison of death. the shadow king agrees to release 
brandys love if link brings the shadow king the 4 mythical beasts,
and defeats them in his coliseum for tsk's entertainment.
this sets the stage for 4 dungeons, then 4 boss battles.

undead island? we have graveyard enemies.
we could put these on skull island as special coliseum
fighters? secret skull island dungeon?

anyway, link defeats the 4 dungeons, beats the 4 bosses,
then confronts tsk, and demands brandys love be set free.
tsk laughs and then they battle. after battle, tsk tells
brandy the only way for her to see her love again is to
pass on to the other side, which she agrees to do.
link says goodbye, brandy becomes a ghost.
the final image is the boat sailing away with caption
'link continues on his quest..'

brandy's silver locket contained a map of these islands,
which brought brandy there. she knows her lost love is
somewhere on one of these islands.














post-release notes:

only spawn 1 floating eye in forest dungeon rooms.

if a room with a switch in it has been solved, (visited)
then remove the floor switch obj post room build.

if player has the map, dont spawn the miniboss.

fix those really hard column and row rooms.
make more versions of really easy row and column rooms.
we need more room data overall.











Actor Refs

a projectile's caster should be an actor reference.
if a projectile's caster is null, then it should have no behavior.
this is because some gameobjects cast projectiles,
but in that case the projectile wouldn't have any behavior
related to the caster.

this simplifies the current system for handling projectiles,
which uses the moveComponent. using this moveComp, projectile.update
attempts to prevent projectiles from ovrelapping with their casters,
but this is based on the compMove and not the hitBox, which is
actually the target of importance. we need to have access to
the entire actor object, not just it's compMove! we need to
touch the actor's hitBox from projectile.update, and we can't currently.
once we do this, we can check and align projectiles to the actor's
hitBox, and then larger enemies can have larger hitboxes while also
being able to cast projectiles...
plus, projectiles could properly implement their behaviors - by
tracking the actor's hitbox instead of their newPosition..

Improve Projectile.Spawn()

*miniboss cant shoot fireballs south - why?
?= pro.spawn() assumes that the actor's collRec is 16x16 - it shouldn't.
this means only 16x16 actors can safely shoot fireballs without damaging
themselves, which is some valve level stupid. this method should take
the actor as a parameter, and then we should base the offsets FOR ALL
PROJECTILES off of the actor's collision rec width and height. this
would allow larger actors, like bosses, to SHOOT FIREBALLS. geez.

Special Attacks / Boss "USE"
bigeye uses the shut + bloodshot frames for his special.
bigeye: spawns A TON of exploding seekers while in his special.




