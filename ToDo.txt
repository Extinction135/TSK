
"As we enjoy great advantages from the inventions of others,
we should be glad for an opportunity to serve others by an invention of ours,
and this we should do freely and generously."
- Benjamin Franklin	


VisualStudio Shortcuts
F12 + selected word = goto definition
CTRL + M, +O = opens, closes regions


The Big 4:
"Give the player meaningful choices to make."
"Remind the player of their choices."
"Recognize and respond to what the player does."
"The Gameworld is a character that reacts to the player."


- Milestones -

Forest Islands complete
Death Mtn Islands complete
Lava Islands complete

Cloud Islands complete
Swamp Islands complete
Thieves Hideout complete

Shadow Dungeon, TSK Fight complete




0.77 playthru: https://youtu.be/_b7qclGTffE
0.79 goals:
	- removed savedata and load/saving X
	
	WAND X + SPELLBOOK + SPELL SCREEN
	WIND - crucial because levels have wind intensity + direction values now!
	
	WIND magic
	FIRE magic
	FREEZE magic
	EXPLODE magic
	WATER magic
	EARTH magic
	SUMMON magic
	ENEMY magic
	
	+ option for loading level data 'fresh' each time for sandboxing
	(items: hookshot, axe, beans)
	(interactions: WIND, acts/objs in water)
	(dungeon: marked map PLS, working puzzles, per dungeon roomdata)
	(X smaller ram: title image is complete, can be own sheet, no big text)
	(pets: stable, more pet variety, multiple pets (actor mini pool in fun_hero)
	better coliseum - uniq objs + enemies
	better overworld - more skulls, waves, cluds, vfx @skullIsland
	working summary screen, displaying all dungeons record data
	
Today:







Spell Book

this is the book from lttp. clicking on it opens a screen
just like the options/cheat screen, but has menuItem selections
for SPELLS. the menu items are visually arranged by element:
explosive, fire, ice, wind, electricity.
these are the vertical seperations on the screen, as we need
to draw and display the info widget here too. this allows for
8 spells of each element, using the current UI systems.

summon magic will be handled differently, via RITUALS.
we have visual menu item sprites for MOST of these elements:
explosion animation, ground fire, iceball, wind (need), and 
electricity (which we can use a lightning bolt for).

this sets up the spell book screen to modify the playerData.currentSpell
value, and allows for spell growth.

cleaned up options screen.
spellbook screen exists.
bombos spell menu item exists.
awesome book sprite added, based on lttps.
inventory setup to handle new spellbook.
enemy fang replaced with wand weapon in inventory.

removed bat summon magic ui item.
added ether to test against bombos.
spell ui items are now animated.
tested switching between spells, working.
tested casting spells via wand, working.









when we close the spellbook, the inventory screen
should update the info widget to get the currently
selected items info - otherwise it displays the last
selected spell.

when we select a spell, the spellbook should close.

if we equip the spell book to the item slot, the spell
book screen should open upon use.

the spellbook should be equipped to the item slot,
when the wand is equipped to the weapon slot.
this allows for fast changing of spells, while
still letting player overwrite their current item 
after equipping the wand.














Rituals

a way to summon enemies to train or fight. different than
magic, because rituals would create actors (with spawn particle fx).













SPELLS+++++++

playerdata.currentSpell controls what the wand casts.
working and tested!



fireballs, iceballs, etc.. via spells...
we can even route fire and ice rods to cast() instead
of calling projectiles directly, so fn_magic acts as
an entry point for any actors casting magic.
//Functions_Projectile.Spawn(ProjectileType.Iceball, Actor, Actor.direction);



we just need to be able to set playerdata.currentSpell
via the spell book and magic is setup and working.
we already have ether and bombos as spells.
now we just need them as entries in a spell book.





SpellBook

playerdata has a value for current spell, which is a spell
type enum value (new), and booleans for spells the player
has learned. we flip a boolean in playerdata, and the spell
book displays this spell as selectable. selecting the spell
assigns that spell to the playerdata.currentSpell reference.

this looks similar to the DUNGEON MAP, and uses the SCROLL
sprite objects, just like it does. so, start by copy pasting
that screen in and changing it's name to spellbook, then modifying
the class to just display the scroll.


Spell Selection

how do we display MANY spells? via a bullet point, next to
some text labels. this bullet point is a ui item sprite,
set in a 16x16 sprite, but used differently than regular
menuitems. these 'menu items' are much closer together,
so we can fit more text into a smaller area. we do this
so we can display many spells on the spell book, while
still using the menuItem systems that exist. 

selecting a spell changes playerdata.currentSpell to the
proper spell type enum value.






Wind spells
*wind projectiles exist in their own pool, because they interact with
roomObjs, actors, AND projectiles - allowing wind to push EVERYTHING.
this allows wind to COUNTER projectiles. which make wind spells the most
powerful, but also limited because they dont do direct damage. so it 
takes intelligence and skill to use them.
gust: wind pro in casters direction.
repel: wind pros from casters center out, constantly across frames.
fly: pushes caster in facing direction each frame, in flying state.
mass move: pushes all objs, actors, and pros in room in given direction.
control wind: sets the level's wind direction, intensity, and frequency.
tornado: spawns a tornado roomObj. (fire, ice, explosive, electrical tornados too)...
****wind should work in water as well*****





Fire spells
Fire -creates groundfire in the direction of the caster.
Fire Walk - creates groundfires wherever the caster walks
Circle of Fire - creates groundfire around the caster in circle, across frames, continuously.
Fire Rain - red rain falls, creating ground fires where ever they touch (environmental fx).

Ice Spells
ice ball - acts as it does currently
freeze ground - at casters position
hail - large snowball objs fall, causing level 1 destruction,
creating icetiles where ball hitbox overlaps, mostly single ice tiles.
this is diff pattern than iceballs.
snowstorm - freezes all objects in level (frozen state), distrubuted
across frames, randomly freezing objs and placing icetiles
ice block wall - create wall of destructible ice blocks (only blocking, with ice
tiles underneath and around them).
ice block freeze all - freezes all actors with iceblocks that can be
frozen (non minibosses and bosses).
Ice Walk - everywhere hero walks, ice tiles spawn, across frames.

Explosion spells
explosion - creates explosion in casters direction with safe offset
line of explosions - a line, with offsets in casters direction
bombos - explosions around caster
all actors explode (across frames)
all roomObjs explode (across frames)

Electricity spells
ether - bolts from the sky (should have small clouds over them) (should
happen across frames too)
thunderstorm - clouds appear randomly, spawning bolts down
*levels should spawn clouds too - can 'rain' regrowing objects,
plus this adds depth. they can rain lightning, fire, ice, etc..
think of them as magic or projectile factories that interfere with
the player...

Summon spells
skeletons - actors that cannot be killed (self-rez from extended hit state).
summons 1, 4, or 16 or them.
bat summons are already done, more or less.


MISC spells

meteor/comet (single big / many small) falls from sky, smashing into ground,
leaving crater objects and explosions.

blackhole - pulls everything into it (via wind), releases any actor or roomObj
it touches, killing hero too, then animates closed. explodes. leaves behind
a white dwarf object, large globe that floats and slowly pulls objs towards
it. does no damage, just blocks.








Quake Magic

how is this different than ether, in-game? ether kills
all, quake destroys everything that isn't flying. this
causes des level 2 to all objects and enemies who have
compMove.grounded set to false, except hero.

this simply shakes the camera for it's effect.











WIND! objects

wind projectiles push actors and roomObjs (and other projectiles?)
hold up! wind projectiles should be in their own pool, so we can
check them against the main projectile pool, allowing wind to push
projectiles, making wind the only defense against projectiles - useful!

levels have wind direction, wind intensity, wind birth.
this is fed into routines that randomly spawn wind pros on screen
in level direction, with level intensity(magnitude), at level birth rate.

Spells - round 2

spell to cast gust of wind (max magnitude).
spell to cast gusts of wind away from the caster all directions.












Fire Tornado
should be able to cast a fire tornado. this is obtained from fire tornado island,
by solving the puzzle and defeating the fire tornado destroying the land. this is done
by changing the wind direction to force the tornado over water, which extingushes the
fire and settles the tornado down. this unlocks the fire tornado magic somehow.
*weathervane - hitting the weathervane changes the direction of the wind. this allows
link to move the fire toronado out to sea and off the level. once this is done, the 
fire tornado magic is unlocked - or something else. i dunno.


Mountain Dungeon Climb
wind pushes the player while they are trying to climb the mountain to the dungeon
entrance. the wind is an obj, with animated action lines, so the player can 'see' the
wind and it coming towards them - allowing them to dodge.




wind should occasionally blow thru overworld levels
this is a global push() on all objs and actors.
link would be pushed a bit.
leaves would fly out from trees, etc..
it's a very environmental thing, but adds life.

The Kusanagi Sword
this sword creates gusts of wind, which push objects
actors and projectiles (specifically ground fires).
this sword is used in a challenge where link must
push fire across a field to kill a rival warlod, via
the kusanagi legend in japan. alsoknown as the sword 
of gathering clouds.
















Big Magic Container + Frozen Smashing Damage Bonus

implement the hammer + ice bonus damage, plus the big magic
refill loot spawn. this is a special call in functions_loot,
specially made for hammers destroying iceblocks with actor or
object refs! with this check, we always spawn a big magic container.
which means, we need a big magic container.. lol..

rip this from lttps sprites.





Bombos++

we can improve bombos, if we simply change the explosion
placements around link. more or less, but it doesn't need
to be in a square pattern. plus, it would be nice to
see these explosions happen sequentially around hero, so
use a counter to meter out which explosions are placed where.
we can even have some kind of custom explosion particle over
hero when he casts this, showing the player that bombos is pushing
outwards from them, showing aoe effects.




Lightning Bolts++

lightning bolts should have an initial ground blast,
because they are hitting the ground, not the air.
we can also have a tapered lightning bolt at the top that
fades out, limiting the bolt to 5 + 1 particles,
plus 1 explosion projectile, per enemy, for a total of
7 * actor/obj enemy count.





comet magic

bombos should make non-hero actors explode via explosions
simultaneously, along with bomb circle around link.

quake shakes the screen and deals level 2 damage to everything
in the level. so it's very powerful. BUT flying objects and actors
are completely immune to it. this also means we need to write a
camera shake routine like we did in th.







Default Dungeon

the default dungeon sheet is the one we use for all
overworld / field level dungeon objects. this means
this 'dungeon' has a green grassy floor.

the pit teeth default to brown, which is part of the default
sheet. this default sheet should be thought of as the 'world' 
dungeon sheet - these pits will appear on the overworld against the
expected green bkg color. so the default pit teeth need to be green,
leading into brown as they go down into the ground. 






Coliseum++
we need 'windows' that look into the coliseum,
like the overworld sprite depicts. plus, I don't like
how the coliseum level is unbalanced and to the right.
instead, the coliseum - and all subsequent coliseums -
will be entrance centered to level, north of spawn.
this 'presents' the level much better, because coliseums
have no required puzzle for entry.

a window is a 3x4 obj, with baked in bkg.
so this saves us a lot of roomObjs.



Coliseum++++
we also need to have the large skulls be a 2nd object
that can sit on the ground, indestructible. this way
we can decorate the shadow coliseum appropriately.
we should add this skull detail to the overworld map as
well.





Grass++
cut grass should grow into tall grass if near coastlines,
or filled ditches. 





Water++

*we could have animated floating lily pads, much like the animated
flowers that sit over the grass levels. this would add some decoration
to the otherwise bland sea water.

*need to make boat anchor object - this is already in common objs,
and can be used to further decorate piers.






Implement Cane of Somara (or whatever)
this is the cane that creates blocks that are pushable.
this makes it MUCH easier to get thru dungeons, as many
rooms rely on floor switches, which link can simply
create a block over. if a block is created ontop of
a blocking roomObject, the block ...






Tall Coastlines
there is a problem with the tall coastline objs - we should be
able to dig over them, but doing so will remove the entire obj,
leaving a 16x16 ditch, instad of a 16x32 ditch to match the coastline
objs size. the green bkg will show, instead of water, breaking 
immersion. they are immune to digs for now. the solution is to 
break them up into two 16x16 objects, replace them in level,
then allow digging on the top object that transitions to land..
this trans should be based on the dirtcolor, not green, because
water doesn't transition directly to grass on islands. 
-for now tall coastlines are immune to dig-






Bag of Seeds

this simply allows link to place a bush stump, for now.
digging ditches + water tiles + bush stumps = farming.
this is next to magic mirror.

this forms the foundation of farming in the game.

when we click on the bag of beans, we should get a smaller
UI popup that lets us choose what type of seed we want.
for now, we only have bush seeds. these seeds grow bushes,
when planted next to a water source (coastline, water, filled ditch).
once the bush "grows", if its cut, it will leave a stump and
that sequence handles itself.

The Friendly Plant Seymor

-special seed, when planted, spawns a large plant that bites
any enemies near it, dealing them damage, while ignoring link.
this makes it a strategic weapon. these seeds should be limited,
unlike the infinite number of bush seeds link has.
this plant essentially dupes the tentacle actor's functionality.
-after taking a certain amount of damage, the plant dies, so it
cant block and attack in an invincible way. this means it's an actor.
when this plant grows, it spawns the actor and removes itself.

Vine To The Sky

-special seed obtained from fisherman. when planted at cloud
location will spawn a big vine into the sky that link can interact
with. for now this is just a dialog asking if player wants to climb vine,
and if so, then we load the 1st cloud level. later on, link should
be able to actually climb the vine, just like a mountain wall, but the
whole vine is a climbable foothold object. once link collides with a
light obj in the 'clouds', we load the cloud level, or we load the overworld
with link on a cloud location - which allows for much faster traversal
up the clouds later! awesome.

*requires two cloud levels, so we have to touch level data and XML>CS pipeline




BURN HOUSES

as in, have burned versions of each house obj that randomly
smoke and rarely collapse (like roofs randomly collapsing).








Summary Screen++

Summary Screen is not properly displaying player data,
or info about any dungeon record playthrough.

dungeon records should be reset upon dungeon build.
we should be adding the dungeon data properly upon
completion too.





Display Playtime (in inventory?) keep this offscreen.

need to add timespan to playerdata to track playtime,
so we ca display it under repo name on right.


