
"As we enjoy great advantages from the inventions of others,
we should be glad for an opportunity to serve others by an invention of ours,
and this we should do freely and generously."
- Benjamin Franklin	
	
	
	
Roadmap

0.76 - swamp levels + dungeon + enemies
0.77 - castle, city, royal vendors
0.78 - king, fight with king, lightworld storyline done
0.79 - farming + seeds + crops

0.80 - dark world map + 1st level + transition to/from
0.81 - volcano level + dungeon + enemies
0.82 - ice levels + dungeon + enemies
0.83 - graveyard dungeon + enemies

0.84 - darkworld castle + enemies
0.85 - darkworld queen battle
0.86 - darkworld storyline
0.87 - ganon battle + storyline

0.9 - COLOR!!! (keep grayscale as texture option)
0.9+ - supporting media

1.0 - official release



















Today:







ObjTools++

fixed a bug where objTools was getting an animate
call twice each frame, leading to very active selected
objects. which just felt weird.






*we call update or animate on the roomObj tools widget gameobject
TWICE - i guess..



whenever bosses/minibosses get low on health,
SPEED UP THEIR ANIMATION, duh.









Separate Levels and Dungeons

make dungeon level gobal.
make field level global.
build forest versions of both at start of game.
this fixes the jit compilation xbox one does.

-update systems to work with global level instances.





Exiting Dungeons
this should return the hero to the dungeon entrance,
on the proper dungeo entrance level. hero should spawn
just south of dungeon entrance. this means dungeon entrances
can't be blocked by anything directly infront of them.

*plus, the field level will always correspond to a map
location, and we can only access overworld map from field
level, so we no longer need dungeon type checks in overworld
screen, since we always exit from dungeon to field, then field
to map.

*this allows us to have a field and dungeon level in ram
at the same time and maintain the two separately. we can 
even prevent a ReBuild() from being called when hero transfers
between rooms (field and dungeon).

^idea: on town level, we can have an inaccesible area.
then we have an entrance to a blob dungeon, which is built
very short. upon exiting the blob dungeon, hero spawns inside
the inaccessible area in town level. we use dungeon generator
to build the tiny blob dungeon, getting more use out of it.

Magic Mirror
^this plays well into magic mirror: use it in a dungeon to return
to the exit (starting room). exiting dungeon takes us to field.
using magic mirror in field level takes hero to overworld screen.
it does not serve as a connection between worlds, because it has
been broken. the history of why it was broken can be explained.




















Swamp miniboss and boss

miniboss: in water mouth
creates splash when transitioning from above/in water states.
while in water, actor is not blocking and can't be hit.
above water, the actor constantly 'chomps' his mouth, creating bite pros
randomly the actor decides to go underwater/above water.
randomly the actor choose a direction.
randomly the actor dashes.

boss A: ocotohead
randomly ducks in/out of water.
not harmable while in water.
bobs slightly while above water.
only moves while underwater.
creates splash when transitioning.
takes alot of damage, has no attack.
as his health gets lower, he moves
more erratically.

boss minions: tentacles
has above and below water states like head.
pops up, into idle (left 2 frames).
randomly attacks left/right with bites, using
wild swinging animation frames.
takes some damage, but not alot.

swamp boss room:
octohead + 4 tentacles.
when octohead gets below 10 health, he spawns 4 more tentacles.

*we need a watery hub room for swamp mini
*we need a watery boss room for swamp boss
*we need small tiles that the hero can stand on, above water (water lillies!)

*we need swamp dungeon to specifically load these mini & boss rooms.
**in fact, it would be good to have dungeons specifically load the hub
and boss rooms, so we dont have insane boss battles on ice.

we need to 'texture id' each room to a dungeon type using an enum, in xml data.
then loop over the hub rooms, looking for forest id enum, then build it.
we could even collect a list of hub rooms with forest id enum,
and randomly choose one, allowing for variation. we could even
place forest specific objects in these rooms, because we know they
will always be built in the forest sheet (so we dont have two level
sheets on screen at once).

this could be the way to set the level's texture as well.
if the room has a dungeon type enum, then we know what texture that
room requires to be displayed correctly. when we load the room,
we could simply set the texture based on the room's texture enum.

*this removes the need for SetTexture() to exist, as we load/set
the texture based on the texture enum found in xml data, instead.

some rooms would have the texture enum id of any, corresponding to
any of the texture sheets. in this case, we would base the texture
off of the level id.











Mountain Wall Alcoves

we have the sprites.
now we need the code.
this is two objects: alcove wall, alcove landing.

landing = should act similar to mountain wall top.

alcove wall = blocking obj. that's it.
has a collision rec on left or right, so
hero can't 'land' on the side of the alcove.






Mountain Wall Caves
this is one object, sits over existing mountain wall (sorts over)
hero can interact with it by pressing A.
asks hero if hero wants to go into this random cave..
this generates a TINY dungeon (exit, miniboss)





Posts++
Add vertical and hrrizontal posts (we added them
to the base world section sprites, so they in all sheets).










swamp entrance level design
-must swim UNDERWATER under objects to gain access to dungeon entrance.
-need these water objects to swim under too
-need to update underwater swimming to allow for passing through
certain objects (those created above)...







Stats Book
this is located in the options section.
displays player's various stats via the stats screen.
rating (k/d), dungeon completions/failures,
miniboss kills, boss kills, total enemy kills..
deaths, colliseum rating, etc...



Link Story Quest Book
this is located in the quest section, and essentially
serves as the 'log book' or mission tracker for the player.
this has several steps, starting with visit the colliseum.
the quest book is how the player will track the main storyline too.
events that happen should be displayed in this log book.

Blob Story Quest Book
this is located in the quest section too, in a different slot.
this is only displayed if player has discovered the blob questline.
same as link story, but different objectives tracking diff booleans.






My Chickens!
now that we have posts, we can make this sidequest.
this is an NPC with an expanding hitBox check for 4 chickens
nearby. surrounding the NPC is the posts, which form a chicken
pen. link has to pickup and deliver the 4 chickens to the pen,
then he gets the reward.




In Game LoreMaster
talking with this NPC opens the lore screen, which allows
link to select a variety of items, enemies, and map locations.
the lore master then tells the player about the selected thing,
via dialog screens or something. this will be alot of text, so
it should probably display instantly. maybe this screen has a
scroll background, with selections... i dunno.


















Polish + Fixes

explosions should push roomObjects that they touch.
that are moveable. that dont get destroyed?
are explosions pushing objects?

add a 'clean room' button - removes all roomObjs
not of group wall or door. thats it.
leaves us with a blank room with walls, doors,
statues, and floors.
add this button to a new widget.. somewhere..


rats and crabs should "bite", but turtles dont.
all types can be picked up and carried, but rats
and crabs will eventually bite link, causing link
to throw the creature and take 1 damage.


it would be nice to show the currently selected objects
important parameters, like moveable, grounded, etc..
we could put this info next to the object in the objTools
widget, if we extende the widget.


footholds were pushed off the mountain wall.
i assume a frame of interaction happened prior to
the roomObj types being updated.












implement blob dungeon.
standard actor is blob.

Blob Dungeon + Overworld Pit

overworld pit is a non-blocking obj, 16x16,
that is placed somewhere in town level. hero
touching this pit causes hero to fall, level to
close, leading to blob dungeon.

Blob Dungeon
starts in an empty square room, the landing room.
in the landing room, the center area is empty,
and this is where hero spawns. there is no exit.
there is a small blob child NPC that will give
link the map, if link talks to the NPC. NPC is
invincible otherwise.

build path to hub room. (this is where we can load
the blob hub room with vendors, etc..)
build path to exit room. (we can have custom blob
exit room data here too)
add rooms, connect with secrets x2.
blob dungeons should be small and easy, without
miniboss or boss - like training wheels dungeon.



Separate Blob and Forest Dungeons

* the blob dungeon uses the town sheet *

create blob dungeon pit object - this will go on town level.
if hero collides with this obj, he falls into the blob dungeon.
this dungeon builds a critical path to the exit, which
dumps hero back out at last overworld location (or just town level).
-this moves blobs into their own dungeon, without a miniboss or boss.


add an entrance to the blob dungeon (this is pit obj)
from the town level. we can also move some npcs from 
the town level to the farm level, as it seems very
lonely there as is.


DaBlobs
the blobs live in the underworld, literally underground
of the light world. the have an entire culture, men, women,
and children. but they all look the same. they have thier own
building architecture. as blob link, you are mistaken for the
fabled hero blob that is told of in prophecy that will save
the blob people. this gives blob link an entire side plot
that doesn't touch the main plot.

Blob world
this is actually a series of rooms like a dungeon, but without
a hub room or boss room, and the hero's critical path is OUT
of the dungeon TO THE EXIT ROOM. this returns link to the overworld
map screen. in this blob dungeon city, there are rooms with buildings,
commerce, life. the blobs basically live in an underground dungeon.

as human link, the blobs will just ignore you with random dismissive
dialog. if you attack a NPC, the game spawns blob actors at all NPC
locations, then removes the NPCs - the end result being that the blobs
pickup swords and defend themselves from the evil human who attacked them.
we can also model this change using a boolean so future rooms spawn
blob enemies instead of NPCs.

as blob link, NPCs respond normally and all vendors are unlocked.
there is a spot reserved for the blob's sidequest in the hero's inventory.

How do we leave blob world?
the exit to the blob world is marked on the map, which the hero
gets from a helpful child blob in the room where hero's spawns into
blob dungeon. this is like a first peace offerring to tell player
that maybe they don't need to attack the blobs.



Town++
we are going to rebuild the town level completely..
completely! with a few goals in mind: smaller houses
that are father apart. all roofs fade out when link
enters a house, so we don't want multiple houses on
screen at once. only one. we'll also be creating the
My Chickens! sidequest soon, so create a gated area
for chickens, add chickens. hitting a chicken should
make it cluck, of course.













TITLE SCREEN + TEST AI
*not this, but...*
At the begining of the game, build a complete dungeon in the
background. this causes the game to do all the JIT compilation
at the start, so we don't get an initial hiccup when loading into the
first dungeon. *hopefully* because this only happens on uwp
on xbox one, so i'm assuming the code is compiled differently.

title screen is the menu with input over a level screen
played by an AI. this AI doesn't have to be good. it just
has to move around and attack and explore stuff - and it can't
die. after a period of time, randomly load a different level
or dungeon. should start inside a dungeon.













add to forest dungeon:
eye statue - doesn't attack, can be picked up like turtle. 
doesnt move. hand placed.

floating sm eye - randomly floats around, explodes if near hero,
hand placed.








for now, all actors are using the same hitbox.
the hero's hitbox. so some enemies are really hard to
hit, because visually it looks like they are bigger
than their hitbox says they are in-game. this has been
fine so far, but we want MORE CONTROL over hitboxes...
-related to-
projectiles++
projectiles should be cast based on the caster's collision rec.
spawn() should account for collision rec and always spawn projectile
in a position that isn't overlapping caster's hitBox. this allows bosses
to spawn projectiles, since their collision rec isn't the same size
as heros, and we're basing all our projectile spawns off hero's hitbox.
this is a pretty important change.
