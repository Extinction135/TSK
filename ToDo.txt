
"As we enjoy great advantages from the inventions of others,
we should be glad for an opportunity to serve others by an invention of ours,
and this we should do freely and generously."
- Benjamin Franklin	
	
	
	
Roadmap

0.76 - swamp levels + dungeon + enemies + boat
0.77 - castle, city, royal vendors
0.78 - king, fight with king, lightworld storyline
0.79 - intro, farming + seeds + crops

0.80 - dark world map + 1st level + transition to/from
0.81 - volcano levels + dungeon + enemies
0.82 - ice levels + dungeon + enemies
0.83 - graveyard levels + dungeon + enemies

0.84 - darkworld castle level/dungeon + enemies
0.85 - darkworld queen battle
0.86 - darkworld storyline
0.87 - ganon battle + storyline

0.88 - secrets
0.89 - sidequests, extra
0.90 - COLOR!!! (keep grayscale as texture option)

0.91 - playthrough videos
0.92 - development videos
0.93 - intro to codebase / systems design
0.94 - overall design & direction of TSK
0.95 - thoughts on zelda franchise

???

1.0 - official release



















Today:



Ship++

added brandy, ship's captain object.
fixed sorting issue with the stairs cover on the boat.
modified swamp entrance level.
modified boat level. both levels use the same boat
object layout, so the boat is consistent across levels.
compiled roomdata for testing.










Editor++

we need to be able to mass select and move objects.
drag a rectangle around objects, move them in 16 px
increments using arrow keys. button up on top menu
allows for 'mass move' mode.






Boat++

*move brandy's boat to where link spawns on the boat,
when the swamp level loads.
*move brandy's boat to where link spawns on the boat,
when the ship level loads.
*this will be done via mass move tool.











we should be able to interact with brandy, she
should be a vendor.



Brandy, Ship's Captain

we have captain sprites.

-capt. brandy faces up or down based on hero's pos.
this makes her feel alive.
-while facing south, brandy will sometimes blink
-brandy has a hands up animation too

Brandy functions as a vendor for now.


how do we transition between overworlds?
by talking to brandy, the captain, which pops a vendor
dialog screen (for now), where travel can be purchased
for nothing. there are two locations for travel: island
and swamp.








remove swamp level from island.
add captain obj to ship (brandy)
create vendor menuItems for brandy
setup vendor screen for brandy
purchasing a trip should reload the level,
just like colliseum. once the swamp level is
loaded, exiting the level should take hero to 
sea overworld screen. 
should be able to purchase trip back to island too.
all trips should be free for now.














overworlds ++
move the swamp level onto a new overworld. this level
should also have sunken/broken ships around, with vines
and various water objects. brandy's ship should exist
on this level as well, with brandy. this should be a complete
level.

the 2nd overworld is just a single location with a ship
sprite and debris around it. waves are created all over
the screen.







Ship level on Island
we need to complete this level:
ship is docked at a pier, with bridge.
north in level is coastline, with animated water
fx for waves hitting coast. these are implemented
ontop of the existing water tiles, so we don't modify
the swimming system already in place.

update the 1st overworld map: remove the swamp location
and swamp island sprite from map. keep the sprite in PSD
for later use, tho.



































*we can create other boats without brandy that
serve as areas to explore in some water levels.
*we could even create sunken ships to explore.
*and add vines to lock areas off..
*add broken/sunken ship to swamp level near entrance.
*brandy should anchor far away.





create ship flag animation sprites.
remove the jolly roger from it.
we'll use this as an overlay later on if needed.
add ship flag.













Boat Objs


boat bridge top + bottom - used for 2 hitboxes to
keep link inside the bridge so he cant fall off.
this bridge always attaches to a pier.



Pier Objs
this is standard 3x3 grid of sprites,
which we can reduce to 2x3 grid, with flips.









we need a captain object.
we need a captain / destination vendor dialog screen.



link can have a real boat.
this boat can have something on the front of it.
this can be saved in the game data using an enum.
a vendor can sell different boat decorations for gold.
this allows link to customize his boat and save
those customizations. this is essentially sea of
theives.











BOAT LEVEL

the boat always exists at center bottom of a level.
in addition to the boat, we add objects to theme the level.

for example, the swamp level has the swamp entrance obj, plus
vines and various decorations. 

for the coastline level (island boat), we have coastline
objects above the boat, with a bridge and pier.

need function to create boat at boat location, because 
making that damn boat each time will be a PITA.
link boat function to a editor menu button, create boat
for coastline and swamp levels. link coastline level
up to overworld. leave swamp location for testing, for now.












on the boat, we have the captain roomObj. speaking with 
the captain pops up the destination vendor dialog screen.
there are two destinations: swamp and coastline.
these are purchased using menuItems, just like colliseum
challenges or items. upon purchase, the level is reloaded
with a diff level ID corresponding to the menuItem type.
this allows player to move between levels via the captain
object. this allows the game to 'hide' levels from the
overworld, only making them accessible via destination vendor.
also allows for connection to a different overworld map.

remove swamp level location on map.
create coastline boat level location on map and in game.



the boat acts as a very short training/intro level.
link initially starts out on boat level, without ability to
exit boat (no stairs). there is one enemy on board that link
has to defeat - and he has some hp. the captain obj exists
on board, talking with him begs link to kill the pirate.
once link defeats the pirate, the captain changes to the hands
up animtion with exclamation point particle. link speaks
with captain completing the first story boolean: save
the captain. captain thanks link for saving his life and 
turns into the standard captain obj.

on this intro level, however, player can only select sm island
destination. the captain says it's the closest location that 
has supplies so he can repair his ship.. 
*link discovers the hyrule tournament poster on this tiny island*
(which would then open Hyrule as a destination on the boat)
this would also introduce the player to
a smaller overworld map and moving between locations, plus
it would be interesting to switch overworld maps so early
in the game - alluding to a larger game scope and complexity.
*the 'supplies' are a reward for defeating a miniboss in
a special intro dungeon on the island. in the supplies is a 
poster for a tournament in hyrule.


















add more swamp objects:

bulb - annoying small blocking obj
sm plant - blocking, but can be destroyed like bush





Underwater Sorting

when hero is underwater, we should sort to -30.
water sorts to -40.
vines should sort to -20, so we stay below
the vines when underwater, but above them when
above water.








swamp entrance is in the sea, accessed via BOAT.



















spikeblocks++

spikeblocks = swim under. indestructible. immobile.
we need immobile spikeblocks!
we can add these into dungeon rooms as well.





waterfall and coastline sprites exist!












swamp dungeon should be diff than mountain dungeon
in size and complexity. because it takes longer to
move in water, it will feel like the dungeon is harder
on a base level, so the dungeon shouldnt be that large
or complex. we're also going to be adding a water lever
critical path into this dungeon, so it needs to remain
about the size of the forest dungeon. the boss room
should connect to the hub room as well.











Actor Refs

a projectile's caster should be an actor reference.
if a projectile's caster is null, then it should have no behavior.
this is because some gameobjects cast projectiles,
but in that case the projectile wouldn't have any behavior
related to the caster.

this simplifies the current system for handling projectiles,
which uses the moveComponent. using this moveComp, projectile.update
attempts to prevent projectiles from ovrelapping with their casters,
but this is based on the compMove and not the hitBox, which is
actually the target of importance. we need to have access to
the entire actor object, not just it's compMove! we need to
touch the actor's hitBox from projectile.update, and we can't currently.
once we do this, we can check and align projectiles to the actor's
hitBox, and then larger enemies can have larger hitboxes while also
being able to cast projectiles...
plus, projectiles could properly implement their behaviors - by
tracking the actor's hitbox instead of their newPosition..













Boss And Hub Room Upgrade

*we need a watery hub room for swamp mini
*we need a watery boss room for swamp boss
*we need small tiles that the hero can stand on, above water (water lillies!)

*we need swamp dungeon to specifically load these mini & boss rooms.
**in fact, it would be good to have dungeons specifically load the hub
and boss rooms, so we dont have insane boss battles on ice.

we need to 'texture id' each room to a dungeon type using an enum, in xml data.
then loop over the hub rooms, looking for forest id enum, then build it.
we could even collect a list of hub rooms with forest id enum,
and randomly choose one, allowing for variation. we could even
place forest specific objects in these rooms, because we know they
will always be built in the forest sheet (so we dont have two level
sheets on screen at once).

this could be the way to set the level's texture as well.
if the room has a dungeon type enum, then we know what texture that
room requires to be displayed correctly. when we load the room,
we could simply set the texture based on the room's texture enum.

*this removes the need for SetTexture() to exist, as we load/set
the texture based on the texture enum found in xml data, instead.

some rooms would have the texture enum id of any, corresponding to
any of the texture sheets. in this case, we would base the texture
off of the level id.

create 3 cotomouths in hub room for swamp.
create 2 armored spiders in hub room for mountain.










*this also sets up the possibility of water colliseum battles.
*judge should be sitting on a lilly pad.
*we'd just need to flood the colliseum with water tiles, then
place lilly pads / rafts / bridges / etc in specific areas.

















forest level redesign -
a horizontal set of trees block the dungeon entrance.
the entrance is surrounded by indestructible objs.
player HAS TO BURN down the trees to get access to dungeon.
this teaches player objs can be destroyed.
bonus: grass under the trees should act as a fuse for a
massive forest fire across the whole level. kinda like it
does now, but better.

darkworld dungeon entrance level design idea:
must grow foilage to enter dungeon, which
also grows monsters and stuff..









Mountain Sprites
add black pixels to the corners of the mountain wall sprites.
this will make the rooms appear rounded, which further visually
separates them. 




Colliseum Entrance Obj++
the colliseum entrance obj should just be a wide black entrance,
like the center sprite. we dupe that for a total of 3, so we have
a massive entrance. then put those skull pillars on the side. why?
to match the entrance/exit sizes between the colliseum levels.
the exit from the interior is pretty wide, so the entrance
should be wide as well.















My Chickens!
now that we have posts, we can make this sidequest.
this is an NPC with an expanding hitBox check for 4 chickens
nearby. surrounding the NPC is the posts, which form a chicken
pen. link has to pickup and deliver the 4 chickens to the pen,
then he gets the reward.























Polish + Fixes

explosions should push roomObjects that they touch.
that are moveable. that dont get destroyed?
are explosions pushing objects?

add a 'clean room' button - removes all roomObjs
not of group wall or door. thats it.
leaves us with a blank room with walls, doors,
statues, and floors.
add this button to a new widget.. somewhere..


rats and crabs should "bite", but turtles dont.
all types can be picked up and carried, but rats
and crabs will eventually bite link, causing link
to throw the creature and take 1 damage.


it would be nice to show the currently selected objects
important parameters, like moveable, grounded, etc..
we could put this info next to the object in the objTools
widget, if we extende the widget.


footholds were pushed off the mountain wall.
i assume a frame of interaction happened prior to
the roomObj types being updated. 
*when we reset the pool, stopMovement() on all objs too.








TITLE SCREEN + TEST AI

title screen is the menu with input over a level screen
played by an AI. this AI doesn't have to be good. it just
has to move around and attack and explore stuff - and it can't
die. after a period of time, randomly load a different level
or dungeon. should start inside a dungeon.




add to forest dungeon:
eye statue - doesn't attack, can be picked up like turtle. 
doesnt move. hand placed.

floating sm eye - randomly floats around, explodes if near hero,
hand placed.




